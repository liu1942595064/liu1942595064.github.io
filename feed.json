{
    "version": "https://jsonfeed.org/version/1",
    "title": "书谨华腻",
    "subtitle": "在我的心底，写给明天的信",
    "icon": "http://jonayze.top/images/favicon.ico",
    "description": "谨腻子的思维 & 编程笔记 —— 悲观的乐观主义，才是强者的态度！",
    "home_page_url": "http://jonayze.top",
    "items": [
        {
            "id": "http://jonayze.top/2022/01/04/thinking-laboratory/Political-history/course-1/1_%E6%81%B6%E9%AD%94%E7%9A%84%E5%B4%9B%E8%B5%B7/",
            "url": "http://jonayze.top/2022/01/04/thinking-laboratory/Political-history/course-1/1_%E6%81%B6%E9%AD%94%E7%9A%84%E5%B4%9B%E8%B5%B7/",
            "title": "恶魔的崛起1-希特勒",
            "date_published": "2022-01-03T23:32:36.000Z",
            "content_html": "<p>待更新…</p>\n",
            "tags": [
                "思维实验室",
                "政史思",
                "第二次世界大战",
                "希特勒"
            ]
        },
        {
            "id": "http://jonayze.top/2022/01/03/thinking-laboratory/Thinking-about-Finance/course-1/%E6%89%93%E7%A0%B4%E7%8E%B0%E6%9C%89%E6%9E%B7%E9%94%81/",
            "url": "http://jonayze.top/2022/01/03/thinking-laboratory/Thinking-about-Finance/course-1/%E6%89%93%E7%A0%B4%E7%8E%B0%E6%9C%89%E6%9E%B7%E9%94%81/",
            "title": "亲爱的，外面没有别人，有的. 只是你自己",
            "date_published": "2022-01-03T04:36:02.000Z",
            "content_html": "<p> 你需要跳出那个主观的世界，重新认识你自己（跳出自己的主观，以第二个绝对客观的视角去看见，并审视自己的想法，和思考过程）。但不是任何时候都能及时启用元认知及时纠错，所以元认知是需要不断锻炼和强化的。</p>\n<p>那么，开启“元认知”能力，就能够保证我们所做出的决定，是正确吗？很遗憾，并不能。<br>更多的只能帮助我们避免由于主观情绪所引发的错误判断。但情绪只是影响选择决定的因素之一。而另一个主要因素，是我们大脑对某件事或某个领域所掌握的信息量的多少。</p>\n<p>比如很多人总是喜欢告诉你要独立思考，不要盲从大部分人的看法，但其实这并没有什么用，因为思考是建立在认知的基础上的。如果没有足够的认知做支撑，哪怕你绞尽脑汁的思考，大概率得到的也是错误的答案。人之所以不会独立思考，是因为对于某件事或者某个领域不了解，所以才会本能的跟随大部分的看法。独立思考，其实也是我们的本能，当你有了足够的认知和信息量，自然就会独立思考，并不需要你刻意去练习，所以想要做出正确的决定，你所掌握的知识，和信息量是另一个最大的关键点。</p>\n<p>学校会教你，数学，物理，英语这些很多科目，但是并不会教你任何和赚钱有关的这些东西。结果就是很多人读了十几年书，却从未想过自己真正需要的是什么，更多的只是机械式的去读书，最后得到一张文凭，去一家公司上班，然后定期等着自己的老板给自己发钱。在这个过程中，很多人甚至都不知道这些财富产生的逻辑和方法，他们只知道完成自己的工作，每个月就会有钱拿。大多数人其实都是在走这种同化的人生，所以你会发现最终大家的收入其实都差不多的。于是这些年，就会有很多人开始鼓吹“读书无用论”这种偏激言论，翻译过来就是，“读书无法让我赚到钱”。</p>\n<p>但其实并不是读书无法让人赚到钱，因为如果我们把赚钱当做一个独立的学科，那么事实就是——大家读了这么多年的书，但你从未学习过这个学科的任何一点知识，那么自然大概率赚不到什么钱。</p>\n<p>以上“赚钱的知识”只是一个例子，事实上还有很多，对我们人生可以产生很大实际价值的领域知识，这些学校都不会教，不但学校不会教，你身边的父母，长辈，老师，也都无法教给你，因为大概率他们也不懂，那我们应该怎么办呢？其实没有别的办法，唯一的办法，就是靠自己，去学习这些知识。</p>\n<p>这个世界上的知识是无限的，但我们的精力是有限的，我不觉得博学是一件坏事，但是它一定会瓜分掉你更多的精力。知识的最大价值在于它是否能够转化为生产力，如果某个知识不能转化为生产力，那它本质上其实只是你脑海中存储的一条信息而已，你不能说它没用，也许可以满足你求知欲，但是它确实不能给你带来实际的价值。</p>\n<p>你要用大量的精力，去学习对于你的人生能产生实际价值的领域的知识。</p>\n<p>—————————————————————————</p>\n<p>很多人学历史的时候，绝大多数的注意力都放在了记住历史事件本身，其实历史的另一个价值，是它所折射出来的东西。从智人开始掌握了更复杂的沟通能力，组建了更强大的群体，快速蔓延至整个欧亚大陆，到人类创造了宗教信仰，方便管理底层人民。当你用上帝视角去看见这所有的事情的时候，你会发现，历史其实就是一个巨大的轮回，你会看见在这个轮回中，每一个群体，以及个体，他们都在做什么，哪些人最终在这些轮回里获得了胜利，而哪些人又像沙子一样被巨浪更替。当你真的看明白了这些，你就会发现这个世界真正的规则是什么，真正左右这个世界的力量是什么，亘古不变的人性是什么，以及你在这个世界的位置是什么。你会发现很多的事实，尽管有些事实可能会很残忍，但那就是事实。它可以帮助你快速奠定一个有力的价值观框架，我不能说这个框架一定是正确的，但是这个框架一定会让你的价值观变得更加强大，这样今后你在面对人生中的各种问题的时候，你的决定会更加有大局观，更加的果断，且正确。</p>\n<p>经济学的作用不是直接教我们怎么去赚钱，而是让我们深入的了解钱这个东西，以及财富在整个社会中的运作规律，在这些规律中你会看见财富的生产、流动、分配，以及各个阶层的人对于财富的运作的不同。懂了经济学，以后对于国家的一些政策，以及社会现象，乃至金融领域的很多变动，你就会很容易明白了。其实对于大多数人来讲，经济学更大的意义是能够深入的帮助我们建立对于金钱的大局观，包括我们生活中遇见的很多问题，其实都可以用经济学的理论和思维去解决，所以学习一些经济学，对我们来说，其实非常重要，只是大多数人并没有意识到而已。</p>\n<p>金融投资是一门你学好了，直接可以帮你产生财富的知识领域。很多人其实并没意识到，在当前的社会经济环境下，如果你还只是靠每个月攒工资存钱，那么你会过的非常辛苦。不但辛苦，而且到头来你可能还攒不下什么钱，甚至无法过上一个安稳的生活。一是因为工资的收入非常单一，积攒效率很慢。二是因为高通货膨胀率的存在，你以为在存钱，但其实你的钱每天都在消失，10年存款贬值速度可能由10万变为5万，所以我必须要学会把钱用来投资有效的资产，未来的资产增值赛道，股票基金是大多数人最合适的选择。</p>\n<p>通过投资基金股票，我们可以让自己的钱不断产生收益，并且实现复利效应，不但可以超过膨胀，还可以实现源源不断的自主增长，把时间拉长你的钱可以获得数倍的增值，你的投资收益甚至会超过你的工资收入，所以从现在开始你需要明白，也必须明白，这个时代攒钱是行不通的。把钱攒起来投资资产才是正确的方法。</p>\n<p>当然了，投资是需要学习的，并不是说你一上来就能投资的很好。</p>\n<p>商业是最直接可以产生钱的知识领域，但是实践的时候同时也要面临巨大的风险，所以大多数人很多都不会走创业这条路，但是我觉得每个人其实多多少少都应该了解一点，商业领域的知识。其实人生是有无限的可能性的，但是当这些可能性出现在你身边的时候，你需要有足够的能力才能去抓住它。这个能力第一种是资源，第二种就是你的认知。大多数商业的基本框架，第一点就是找到需求，也就是我们常说的商机，或者蓝海市场；第二点就是，提供满足需求的产品，这个产品可以是某样东西，可以是某种服务，总之不管是什么，其核心逻辑，都是能够满足用户需求的东西；第三步就是获得流量，比如说一家奶茶店，门前每天经过的人就是这家奶茶店的流量，变换到互联网上也是一样的道理，多少人能够看见你的东西，是决定你的东西能否卖出去的关键；最后一步就是将产品卖给需要的人，比如很多机构做用户运营也好，营销也好，活动也好，都是为了实现最大效率的转化，基本上所有大大小小的商业模式都离不开这个框架。那些做出成绩的人，其实就是把这个四个环节做到了极致，而失败的人，基本也是这四个环节中的某个或者几个环节出了问题，当然这中间还会涉及成本，利润，渠道这些因素，但是大体框架基本就是这些。而如何把每个环节做好，又涉及到更多具体的方法，所以商业本身其实是有一个大致的知识体系的，那么你至少应该了解这些，了解生意是什么做成的，利润是怎么产生的，这样如果以后你想要创业的话，你的起点会更扎实。</p>\n<p>市面上关于创业的书，真正的干货都非常少，毕竟是直接涉及到钱的东西，大多数都是比较宽泛的内容。可以从讲运营，或者营销类型的书看起，还有一些行为经济学的书也可以看看，都是关联的。</p>\n<p>心理学，也许很多人可能会觉得，心理学的一般都是心理医生，或者相关专业人才需要学，其实这个想法是不对的。心理学最大的意义，不是让你能够猜中别人在想什么，而是让我们透析人性，以及人的行为模式，同时也是对自我认知的一个过程。人是社会动物，我们一辈子都在跟人打交道，如果你真的了解人性，了解到了骨子里那种，那么你人生中的很多问题相信你都可以处理的更好，大到创业做生意，小到与身边的人际关系，这些其实都有应用。</p>\n<p>永远不要去相信人，而是去相信人性。<br>人性是一个完全客观的存在，无论是过去以及现在它都没有变过，在你生活中遇到的大部分问题，只要你基于人性的准则去考量，基本上你都能得到正确的结果，但是前提是，你必须要了解人性，了解到骨子里那种。</p>\n<p>其它领域的知识我们也许不必非要钻到很深的里面，但是对于自己的本专业的领域，一定要钻的越深越好。</p>\n<p>成长之路三陷阱<br>1.永远不要沉迷碎片化的知识。很多人在学习的时候，往往会忽略一个很重要的问题，那就是<em>效率</em>。大多数人想要学习某个领域的知识，第一选择往往是在网上找视频和文章学习，觉得这样方便，效率高，但是其实这种学习的效率非常的低，因为你能在网上找到的无论是文章还是视频，都有一个很严重的问题，那就是这些知识的本身，都太碎片化了。视频也好文章也好，这些内容都出自不同的作者，所以内容质量往往层次不齐，对于没有一定基础的人，你很难把这些碎片化的知识连接起来，到最后你会发现，你虽然看了很多视频和文章，但是你好像还是什么也没有学会。或者会了一点，但是却不知道具体的应用场景，会一直在一种很迷的状态。</p>\n<p>举个典型的例子，比如说你想要学经济学，你在网上听那种几分钟一个概念的碎片经济学内容，其实你听得再多也没有太大作用，因为一开始你连对经济的一个整体框架认识都没有，你会无法把这些知识连接，也不知道具体的应用场景和逻辑，所以听了再多，也是半懂不懂。</p>\n<p>如果你是要从零开始学习一个领域，一定要选择比较系统的，长的内容去学习。看书学习就是一个很好的选择，一本书的内容至少十几万字起步，而且一本书通常只会讲一个领域，足够把一个完整知识体系讲明白，这样的内容才是真正能够让你学到东西的，也是效率最高的学习方式。而且大多数作者，其实都愿意把自己最好的内容写进书里，没有人十几二十万字是为了写着玩的，都希望能留下一些能沉淀下去的东西。</p>\n<p>其实有很多人他们会觉得看书很土，会觉得现在互联网信息那么发达，想学习在网上找内容就行了，那这种想法其实非常的错误的。一定要记住，尽管这个时代信息爆炸，但是真正有用且系统的东西，很难会出现在网上，即使出现了，也会被切割成碎片化的形态。最珍贵的内容，永远是在书本里。</p>\n<p>2.谨慎播种你的精力种子。我们的精力其实就像一颗种子，你把它播种在哪里，它就会在哪里开花结果。可以想一下，其实你每天都在播种，但是你的种子，都种在哪里呢。我们所生活的这个时代，互联网带来了信息的爆炸，网上充斥着大量的娱乐内容，而这些内容，其实大多数都是为了吸引你的精力而批量生产出来的。它们除了给你短暂的快感，对于你的人生几乎没有任何的帮助和成长，并且你要明白，你所拥有的精力种子是有限的，它们非常的珍贵。如果你每天把大量的精力种子，都放在了这些对你的人生毫无帮助的内容上，那么你的未来将颗粒无收。不过庆幸的是，播种的权利在我们自己手上，比如B站，对你而言，可以是一个娱乐网站，也可以是一个学习网站，也可以是一个既能娱乐又能学习的网站，而这就取决于你的精力种子怎么去播撒。当然，这里并不是把所有的精力都放在学习和成长上，也不赞同这种极端的成长方式，因为娱乐，本身也是我们生活的一部分。</p>\n<p>你要把更多的时间和精力，花在可以产生实际价值的领域。比如你学钢琴，或者弹吉他，这些更多的只是爱好，虽然它们并没有坏处，但是也不会产出太多价值，更多的是为了满足自己的喜好，所以你同样需要控制好花在这些地方的时间，最好不要倾斜过多的精力。总之记住这句话，你的精力种子播撒在哪里，你的未来就会在哪里开花结果。</p>\n<p>至于这些种子要具体分配，播撒在哪些地方，这是你需要时刻警醒自己的一个问题。</p>\n<p>3.改变我们人生的，不单单是道理，还有方法。由韩寒导演的一部电影叫《后会无期》，这个电影里有一句台词，叫“我听了那么多道理，却还是过不好这一生”。记得当时这句话挺火的，记得也就是那时候<em>丧文化</em>这个东西在年轻人中开始流行，我其实并不喜欢这句话，因为它其实带偏了很多的人，最主要的是，这句话本身的逻辑其实就是错的。人在年少的时候，总会以为道理是改变自己人生的法门，但其实道理这个东西，更多的作用，是用来塑造价值观的，它只能给你一个大的方向，如果你想要实实在在的把路走通，你需要的不单单是道理，还要靠可以落地实践的方法。什么是道理呢？比如说你想要赚钱，那会有很多人告诉你这样的话——你永远也赚不到，超出你认知范围外的钱，你所赚的每一分钱，都是你对这个世界认知的变现，当一个人的财富大于自己认知的时候，这个社会有100种方法收割你，直到你的认知和财富相匹配为止。这句话其实是有用的，但是如果你只知道这个道理，那么其实是没用的。因为它只给了你一个大方向，告诉你赚到钱你需要有足够的认知，但是具体该学什么，具体该做什么，并没有讲。并不是说，说这些话的人不负责任，而是因为道理这个东西本身，它只负责塑造价值观，不负责教你具体方法。那什么是方法呢?比如说你觉得电商赚钱，你就要去了解不同品类的市场，怎么找货源，怎么开店铺，怎么上架产品，优化标题，封面美工，以及如何去做引流推广，等等等等。再比如你觉得做自媒体赚钱，那么就要去学习怎么写作，文案，排版，选题，视频剪辑，还有各大平台的运营方法，等等。再比如你想要靠投资理财赚钱，那么你需要去学习怎么选股，选基金，分析估值指标，仓位管理，止盈这些。以上讲的这些，就是方法。</p>\n<p>方法是可以落地，是你马上学了就可以实践的，这才是真正能够让你实打实产生价值的东西。任何领域都有属于这个领域的方法，所以想要自己的人生发生实际的改变，那么你应该做的是。</p>\n<p>吸收有用的道理，为自己指明大的方向，然后花精力去学习可以落地实践的方法。并且在那个领域往下深钻，这才是正确的状态。</p>\n<p>像什么一年一定要逼自己看一百本书，或者满世界听大牛的讲座，这种为了努力而努力的行为，不过是为了掩饰焦虑的一种自我欺骗罢了。书的内容是需要消化和实践的，你一年能看完，并吸收10-15本已经是非常不错了。盲目的堆积杂乱的知识，其实对你并没有太大用处，大牛的讲座，听多了也没有太多实际作用，因为真的有用的东西大多是不会讲出来的，你能听到的多是流于表面的道理而已。</p>\n<p>多分出一些时间来，学习“方法”，具体的方法，哪怕付费，都是值得的，因为你的精力，花在了对的地方。</p>\n<p>不能说讲的都是正确的，毕竟每个人的命运都是由无数种不确定的因素组成的，它不是一个系统的学科，所以注定不会有一个标准的答案。</p>\n<p>==正如那句话<br>“亲爱的 外面没有别人 有的 只是你自己”== </p>\n<p>[如果你看见的是一个，自信，阳光，充满斗志的自己，那么我会真心替你开心，为你鼓掌。]{.red}<br>[如果你看见的是一个，灰心，疲惫，失去了希望的自己，那么我想送你一些话——]{.grey}<br>++我们的人生其实就像一场扑克牌局，这场牌局，每个人抽到的牌都不一样，但是这不重要，因为那已经是既定的事实，而我们要做的，不是看见自己抽到的牌比别人差，就放弃这场游戏，而是想办法尽最大的努力打好自己手里的牌。唯一不同的是，牌局是有绝对输赢的，而人生没有。<br>在我看来，能在自己现有基础上不断爬的更高，过的更好，那就是胜利，那就是人生 最大的意义。++{.dot .warning} </p>\n<p>[其实这个世界上的大部分知识都不难，知识的本质就是一个个原理，原理本身不难，多数时候只是因为被人为包装后才变得难。就好像很多金融知识的原理其实都很简单，但是由于很多看似高大上的词，很多人就看不懂了。]{.aqua}</p>\n<p>[历史]{.pink}<br>《人类简史》[尤瓦尔.赫拉利] 意大利<br>《潜规则》吴思</p>\n<p>[经济学]{.pink}<br>《经济学原理》[N.格里高利·曼昆] 美<br>《宏观经济学》[鲁迪格·多恩布什] 德<br>继续深入<br>《国富论》[亚当·斯密]<br>《就业.利息和货币通论》[约翰·梅纳德凯恩斯]</p>\n<p>[金融投资]{.pink}<br>小白<br>《小狗钱钱》[博多·舍费尔]<br>《财务自由之路》[博多·舍费尔]<br>进阶<br>《聪明的投资者》[本杰明·格雷厄姆]<br>《巴菲特致股东的信》[沃伦·巴菲特]<br>《不上班也有钱》[曾婉玲] 台湾</p>\n<p>[心理学]{.pink}<br>《影响力》[罗伯特·西奥迪尼] 美</p>\n<p>M 精</p>\n",
            "tags": [
                "思维实验室",
                "思考财经",
                "财思"
            ]
        },
        {
            "id": "http://jonayze.top/2021/09/13/computer-science/note/theme-shoka-doc/theme-shoka-caikeng/",
            "url": "http://jonayze.top/2021/09/13/computer-science/note/theme-shoka-doc/theme-shoka-caikeng/",
            "title": "主题踩坑补充",
            "date_published": "2021-09-13T14:11:08.000Z",
            "content_html": "<p>:::info<br>这篇文章是为了解决原作者遗留下来的问题帮助大家减少踩坑而写的 。后续可能会随主题的变更而继续踩坑解决问题。</p>\n<p>相信大家也和我一样网上找的教程有些和本主题相关不大，导致一直解决不了问题，如果您有幸找到我，那么恭喜你，你应该减少了找 <strong>解决问题</strong> 的时间。<br>:::</p>\n<h1 id=\"mermaid流程图显示\"><a href=\"#mermaid流程图显示\" class=\"headerlink\" title=\"mermaid流程图显示\"></a><code>mermaid</code>流程图显示</h1><blockquote>\n<p>注：操作之前，请先把该安装的插件安装好。</p>\n</blockquote>\n<ol>\n<li>主题根目录找到 <strong>node_modules</strong></li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/liu1942595064/cdn@master/lvsheng/puppeteer-jie0.PNG\" alt=\"puppeteer-jie0\"></p>\n<ol start=\"2\">\n<li>在主题根目录 node_modules 下找到相关的“旧”的 puppeteer 然后全部删除</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/liu1942595064/cdn@master/lvsheng/puppeteer-jie1.PNG\" alt=\"puppeteer-jie0\"></p>\n<ol start=\"3\">\n<li>全部删完后 在 bash 里设置镜像地址</li>\n</ol>\n<pre><code class=\"bash\">PUPPETEER_DOWNLOAD_HOST=https://storage.googleapis.com.cnpmjs.org\n</code></pre>\n<ol start=\"4\">\n<li>设置完之后 下载 Puppeteer</li>\n</ol>\n<pre><code class=\"bash\">npm install puppeteer\n</code></pre>\n<ol start=\"5\">\n<li>下载好后，返回 [流程2]{.pink} 继续找相关的 puppeteer 相关的字眼，找到后只复制 <code>puppeteer</code> ，注意没有后缀等其它字符，只单独复制它 。</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/liu1942595064/cdn@master/lvsheng/puppeteer-jie2.PNG\" alt=\"puppeteer-jie0\"></p>\n<ol start=\"6\">\n<li>再继续返回 [流程2]{.pink} 找到 <code>hexo-renderer-multi-markdown-it</code> ，把它打开。</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/liu1942595064/cdn@master/lvsheng/puppeteer-jie3.PNG\" alt=\"puppeteer-jie0\"></p>\n<ol start=\"7\">\n<li>打开后找到 node_modules ，打开它，注意是 [流程6]{.pink} 下的 。</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/liu1942595064/cdn@master/lvsheng/puppeteer-jie4.PNG\" alt=\"puppeteer-jie0\"></p>\n<ol start=\"8\">\n<li>打开后可以看到在这目录下有个 命名为 puppeteer 的文件夹。把当前的 puppeteer 文件夹覆盖为 [流程5]{.pink} 所复制的 puppeteer 文件夹，就成功了。可以显示 mermaid 流程图了。就是这么简单，我也没想到，我之前整得太复杂了……</li>\n</ol>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/liu1942595064/cdn@master/lvsheng/puppeteer-jie5.PNG\" alt=\"puppeteer-jie0\"></p>\n<p><img data-src=\"https://cdn.jsdelivr.net/gh/liu1942595064/cdn@master/lvsheng/puppeteer-jie6.PNG\" alt=\"puppeteer-jie0\"></p>\n<p>:::warning<br>更多踩坑请期待更新……<br>:::</p>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo"
            ]
        },
        {
            "id": "http://jonayze.top/2021/03/07/computer-science/java/course-1/4_%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/",
            "url": "http://jonayze.top/2021/03/07/computer-science/java/course-1/4_%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/",
            "title": "4：Java类型转换",
            "date_published": "2021-03-06T22:41:47.000Z",
            "content_html": "<h1 id=\"类型之间的转换\"><a href=\"#类型之间的转换\" class=\"headerlink\" title=\"类型之间的转换\"></a>类型之间的转换</h1><ol>\n<li><p>大数据类型指的是当前的 <strong>基本类型</strong> 和 <strong>引用类型</strong></p>\n</li>\n<li><p>小数据类型指的是大数据类型下的 <strong>每个小分类</strong></p>\n<blockquote>\n<p>参照基本类型：</p>\n<p><strong>整型</strong>  <strong>浮点型</strong> 等等…. 这些都是小数据类型</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"同种小分类下的定义空间之间可以直接赋值操作\"><a href=\"#同种小分类下的定义空间之间可以直接赋值操作\" class=\"headerlink\" title=\"同种小分类下的定义空间之间可以直接赋值操作\"></a>同种小分类下的定义空间之间可以直接赋值操作</h2><blockquote>\n<p><code>int a = 1;</code>  <code>int b = a;</code>  ~  <code>float x = 3.4;</code>  <code>float y = x;</code></p>\n</blockquote>\n<h2 id=\"大数据类型之间的转换问题\"><a href=\"#大数据类型之间的转换问题\" class=\"headerlink\" title=\"大数据类型之间的转换问题\"></a>大数据类型之间的转换问题</h2><ul>\n<li><p>同种大数据类型之间才能发生直接转换</p>\n<blockquote>\n<p>基本类型—-基本类型之间 可以直接转换（<strong>自动 强制</strong>）</p>\n<p>引用类型—-引用类型之间  可以直接转换（<strong>自动 强制</strong>）</p>\n</blockquote>\n</li>\n<li><p>不同大数据类型之间需要间接转换</p>\n<blockquote>\n<p>基本类型—-引用类型之间  不可以直接转换（<strong>间接–包装类/封装类</strong>）</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"保证大数据类型一致的前提下\"><a href=\"#保证大数据类型一致的前提下\" class=\"headerlink\" title=\"保证大数据类型一致的前提下\"></a>保证大数据类型一致的前提下</h2><ul>\n<li><p>基本类型—基本类型</p>\n<blockquote>\n<p>小数据类型相同</p>\n<blockquote>\n<p>都是整型  都是浮点型等情况下</p>\n</blockquote>\n<pre><code class=\"java\">byte a = 1;\nint b = a; \n\nint c = 12;\nlong d = (long)c; // 基础类型\n\nInteger c = 12;\nlong d = c.longValue(); // 包装类型\n// --从小空间转换到大空间，会直接自动转换，除了long很特殊外 。\n\n\nint a1 = 10;\nbyte b1 = (byte)a1; \n\nlong a2 = 235L;\nint b2 = (int)a2;\n// --从大空间转换到小空间，需要写（...）来告诉计算机需要强制转换的类型。括号里填 需要强制转换的类型。\n\n\n// 或者---------------------\n\n\nfloat a_a = 1.9F;\ndouble a_b = a_a;\n// 自动转换\n\ndouble a_c = 26.14;\nfloat a_d = (float)a_c;\n// 强制转换\n// --它两都是精度转换，就是小数位数的区别。\n\n\n// 需要注意--------------------\nint g = 1000;\nbyte x = (byte)g;\n// --如 1000 这个数值超出 byte 所规定范围的数值，所强制换算下来的值可能会有损失,它只保留最后的 8bit 位。其它类似转换也一样，需要注意！\n</code></pre>\n</blockquote>\n<blockquote>\n<p>小数据类型不同</p>\n<blockquote>\n<p>从 整型 到 浮点型 等情况下</p>\n</blockquote>\n<pre><code class=\"java\">// 整型——浮点型：两个比较精确程度 浮点型精确程度更高 可以直接存放整数 反之需要强制转换 。\nint q = 8;\nfloat z = q; // 直接自动转换\n\nfloat a = 1.6F;\nint b = (int)a;\nSystem.out.println(b);//需要强制转换\n// 最后输出的是 1 ，因为 int 是只存放整数的。\n\n\n/* 整型——字符型：每一个字符都对应这一个Unicode\n码，例如 &#39;a&#39; ---- 对应的是 97 。\n*/\nchar x = &#39;a&#39;;\nint y = x; // 直接自动转换 y = 97\n\nint p = 97;\nchar k = (char)p; // 需要强制转换 k = &#39;a&#39;\n\nbyte j = 97;\nchar f = (byte)j; // 注意，byte 转换到 char 也是需要强制的，没有什么数值范围的说法 。\n</code></pre>\n<blockquote>\n<p>注：C++ 等语言的布尔型虽然有 1 和 0 代表 true 和 false，但在 <strong>Java</strong> 里 布尔型的 true 和 false  没有对应的代表 1 和 0 的说法，<code>true 就是 true</code> ，<code>false 就是 false</code>。</p>\n</blockquote>\n</blockquote>\n</li>\n<li><p>引用类型—引用类型</p>\n<blockquote>\n<p>引用类型 后续讲对象时会讲到…</p>\n</blockquote>\n</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "计算机程序设计(Java)",
                "零基础学Java语言",
                "Java教程"
            ]
        },
        {
            "id": "http://jonayze.top/2021/03/06/computer-science/java/course-1/3_%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/",
            "url": "http://jonayze.top/2021/03/06/computer-science/java/course-1/3_%E5%B8%B8%E9%87%8F%E4%B8%8E%E5%8F%98%E9%87%8F/",
            "title": "3：Java常量与变量",
            "date_published": "2021-03-05T22:15:21.000Z",
            "content_html": "<h1 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h1><blockquote>\n<p>常量代表程序运行过程中，不能再次改变的值 。</p>\n</blockquote>\n<h2 id=\"常量的作用\"><a href=\"#常量的作用\" class=\"headerlink\" title=\"常量的作用\"></a>常量的作用</h2><ol>\n<li>固定的值 代表计算过程中经常用到的值</li>\n</ol>\n<blockquote>\n<p>便于程序计算</p>\n</blockquote>\n<ol start=\"2\">\n<li>用来代表一个含义</li>\n</ol>\n<blockquote>\n<p>比如：UP ==》 1 2 3 4  分别代表上 下 左 右</p>\n</blockquote>\n<h2 id=\"什么样的值算是常量\"><a href=\"#什么样的值算是常量\" class=\"headerlink\" title=\"什么样的值算是常量\"></a>什么样的值算是常量</h2><ol>\n<li>固定不变的值  算作常量</li>\n</ol>\n<blockquote>\n<p>可以认为所有基本类型的值，固定不变的都是常量 。</p>\n</blockquote>\n<ol start=\"2\">\n<li>特殊常量</li>\n</ol>\n<blockquote>\n<p>“abc”—》String</p>\n<p>String 是一个引用数据类型，它的值很特殊，可以简单的视为常量 。</p>\n</blockquote>\n<ol start=\"3\">\n<li>自己创建的空间 存储一个值 让它固定起来 不能改变</li>\n</ol>\n<blockquote>\n<p><code>final int UP = 1;</code></p>\n<blockquote>\n<p>关键字：<strong>final</strong></p>\n</blockquote>\n</blockquote>\n<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><blockquote>\n<p>变量指的是：程序执行过程中可以改变的</p>\n<blockquote>\n<p>它也是一个<strong>内存空间（小容器）</strong>。</p>\n</blockquote>\n<p>变量空间在创建（声明）的时候，必须指定数据类型和变量空间的名字 。</p>\n<blockquote>\n<p>里面只能存储一个内容（值，引用）</p>\n<p>里面的内容可以改变</p>\n</blockquote>\n</blockquote>\n<h2 id=\"变量如何创建-声明\"><a href=\"#变量如何创建-声明\" class=\"headerlink\" title=\"变量如何创建/声明\"></a>变量如何创建/声明</h2><blockquote>\n<p>数据类型  变量名字；</p>\n<p><code>int a;</code></p>\n<p><code>String b;</code></p>\n</blockquote>\n<ul>\n<li>需要注意：</li>\n</ul>\n<blockquote>\n<ol>\n<li>变量是一个空间，可以只创建空间，里面不存放内容。</li>\n<li>没有赋值的变量空间创建后是没有默认的内容，是空的。</li>\n<li>空的变量空间不能拿来使用，编译错误。</li>\n</ol>\n</blockquote>\n<h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><blockquote>\n<p>常用于对一段或多段代码的含义标注，尤其对团队开发很重要。</p>\n</blockquote>\n<h2 id=\"单行注释\"><a href=\"#单行注释\" class=\"headerlink\" title=\"单行注释\"></a>单行注释</h2><blockquote>\n<p>//</p>\n</blockquote>\n<pre><code class=\"java\">class DemoTwos&#123;\npublic static void main(String[] args)&#123;\n  byte a;\n  short a1;\n  int a2;\n  long a3;\n  float a4;\n  double a5;\n  char a6;\n  boolean a7;\n  boolean a8;\n  a = 1;\n  a1 = 45;\n  a2 = 454;\n  a3 = 9404L;\n\n  a4 = 54.15F;\n  a5 = 95.14;\n\n  a6 = &#39;d&#39;;\n\n  a7 = true;\n  a8 = false;\n\n\n  long b = 2147483648L;\n  float c = 6.8F;\n\n&#125; // 单行注释\n&#125;\n</code></pre>\n<h2 id=\"多行注释\"><a href=\"#多行注释\" class=\"headerlink\" title=\"多行注释\"></a>多行注释</h2><blockquote>\n<p>/*</p>\n<p>*/</p>\n</blockquote>\n<pre><code class=\"java\">class DemoTwos&#123;\npublic static void main(String[] args)&#123;\n   System.out.println(&quot;谨腻子冲啊！！！&quot;);\n&#125; /*\n\n多行注释\n\n*/\n&#125;\n</code></pre>\n<h2 id=\"文档注释\"><a href=\"#文档注释\" class=\"headerlink\" title=\"文档注释\"></a>文档注释</h2><blockquote>\n<p>/**</p>\n<p>*/</p>\n</blockquote>\n<pre><code class=\"java\">/**\n文档注释\n*/\nclass DemoTwos&#123;\n public static void main(String[] args)&#123;\n     System.out.println(&quot;谨腻子冲啊！！！&quot;);\n &#125;\n&#125;\n</code></pre>\n<h1 id=\"数据与内存的关系\"><a href=\"#数据与内存的关系\" class=\"headerlink\" title=\"数据与内存的关系\"></a>数据与内存的关系</h1><p><img data-src=\"https://cdn.jsdelivr.net/gh/liu1942595064/cdn@master/lvsheng/memory-principle.png\" alt=\"内存空间使用原理\"></p>\n<blockquote>\n<ul>\n<li>赋值的变量值会先存储在常量池里，之后变量空间里的<code>x</code>会把常量缓冲区里的<code>1</code> 拿出来存进栈里面 。</li>\n<li>常量缓冲区里的常量值 存储形式是以 计算机识别的 **二进制形式存储 **的 。</li>\n<li>在向内存中存储常量值时，如果你没对内存 “预定” 数据类型，内存通常会自动帮你定义一个数据类型，但有时候并非是我们想要的，需要我们自己去 “预定” 一个。</li>\n<li>特殊例中 内存里自动“预定” 整型 <strong>最大值只有 int</strong> ，而浮点型中 <strong>最大是 double</strong> 。</li>\n</ul>\n</blockquote>\n<h2 id=\"补充1：long-和-float-的-“命运”\"><a href=\"#补充1：long-和-float-的-“命运”\" class=\"headerlink\" title=\"补充1：long 和 float 的 “命运”\"></a>补充1：long 和 float 的 “命运”</h2><ol>\n<li>long</li>\n</ol>\n<blockquote>\n<p>举例：<br>int a = 1;<br>byte b = a;</p>\n<p>1—-&gt;  32bit （ int ）</p>\n<p>00000000 00000000 00000000 00000001</p>\n<p>8位一组</p>\n<p>b—-&gt;  8bit</p>\n<p>00000001</p>\n<p><strong>为什么 32bit 的 1 能转到 8bit 的 b ？</strong></p>\n<blockquote>\n<p>因为 = 赋值的时候做了一个自动的决定 自动类型转化 。</p>\n</blockquote>\n<blockquote>\n<p>它把前面没用的 “组”（全是0的情况下） 全都去除了，留下了符合条件的 “组” 。</p>\n</blockquote>\n<p><strong>但是，为什么 <code>long</code> 确不行呢？！</strong></p>\n<p>因为内存里帮你决定的 数据类型  最大只有 int ，long 比它还大 ，所以要是存 int 的上限值 以上的数值，是存不下的。</p>\n<p>解决办法：</p>\n<p><code>long a = 2147483648L;</code></p>\n<blockquote>\n<p>在后面加一个 L 就行，虽说小写 l 也行，但建议还是 <strong>以大写为主</strong>。小写看着像1，团队开发千万不要小写。</p>\n</blockquote>\n</blockquote>\n<ol start=\"2\">\n<li>float</li>\n</ol>\n<blockquote>\n<p>举例：</p>\n<p>3.4—-》  64bit(double)</p>\n<p>0 000000000 00000000000000000000000….省略</p>\n<p>第一组  第二组  第三组</p>\n<p>分别表示：<code>符号位</code>  <code>指数位（整数）</code>  <code>尾数位（小数）</code></p>\n<p>可以看到 浮点型 和 整型 在这计算方面不同。</p>\n<p>它没有统一有规律的组，从 double 进行转换到 float 会有损失 。</p>\n<p>解决办法：</p>\n<p><code>float a = 6.9F;</code></p>\n<blockquote>\n<p>在后面加一个 F 就行，同样建议 <strong>以大写为主</strong> 。</p>\n</blockquote>\n</blockquote>\n<h2 id=\"补充2：char-和-String-的区别\"><a href=\"#补充2：char-和-String-的区别\" class=\"headerlink\" title=\"补充2：char 和 String 的区别\"></a>补充2：char 和 String 的区别</h2><ol>\n<li>char</li>\n</ol>\n<blockquote>\n<p>基本数据类型</p>\n<blockquote>\n<p><strong><code>&#39;a&#39;</code></strong>      <code>&#39; &#39;</code> 里只能存一个字符</p>\n<p>叫法：字符</p>\n</blockquote>\n</blockquote>\n<ol start=\"2\">\n<li>String</li>\n</ol>\n<blockquote>\n<p>引用数据类型</p>\n<blockquote>\n<p><strong><code>&quot;a&quot;</code></strong>    <strong><code>&quot;abcde&quot;</code></strong>    <strong><code>&quot;&quot;</code></strong>    <strong><code>null</code></strong></p>\n<p><code>&quot; &quot;</code>  里能存多个字符 包括空符 和 null 都算字符串。</p>\n<p>叫法：字符串</p>\n</blockquote>\n</blockquote>\n",
            "tags": [
                "计算机科学",
                "计算机程序设计(Java)",
                "零基础学Java语言",
                "Java教程"
            ]
        },
        {
            "id": "http://jonayze.top/2021/03/05/computer-science/java/course-1/2_%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/",
            "url": "http://jonayze.top/2021/03/05/computer-science/java/course-1/2_%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/",
            "title": "2：Java数据类型",
            "date_published": "2021-03-04T22:36:59.000Z",
            "content_html": "<h1 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h1><h2 id=\"基本数据类型\"><a href=\"#基本数据类型\" class=\"headerlink\" title=\"基本数据类型\"></a>基本数据类型</h2><ol>\n<li>整型  <code>byte</code>  <code>short</code>  <code>int</code>  <code>long</code></li>\n</ol>\n<blockquote>\n<p>byte  =  1字节  =  8bit 位 (0 0000000)  =  256种组合</p>\n<blockquote>\n<p>用 第一个bit位置 来记录符号 ： 0正数  1负数</p>\n<p>表示范围：-2<sup>7</sup>  ~  2<sup>7</sup> -1   即  -128  ~  127</p>\n</blockquote>\n<p>short  =  2字节  =  16位  =  65526种</p>\n<blockquote>\n<p>表示范围：-32768 ~ 32767</p>\n</blockquote>\n<p>int  =  4字节  =  32位</p>\n<blockquote>\n<p>表示范围：-2147483648 ~ 2147483647</p>\n</blockquote>\n<p>long  =  8字节  =  64位</p>\n<blockquote>\n<p>表示范围：按照以上规律计算</p>\n</blockquote>\n</blockquote>\n<ol start=\"2\">\n<li>浮点型  <code>float</code>   <code>double</code></li>\n</ol>\n<blockquote>\n<p>float  =  4字节  =  32bit 位</p>\n<blockquote>\n<p>第一个 bit位 表示符号 ，后 9位 表示整数，后面全部表示小数</p>\n</blockquote>\n<p>double  =  8字节  =  64bit 位</p>\n<blockquote>\n<p>按照以上规律计算</p>\n</blockquote>\n</blockquote>\n<ol start=\"3\">\n<li>字符型  <code>char</code></li>\n</ol>\n<blockquote>\n<p>char  =  2字节  =  16位bit 位</p>\n<blockquote>\n<p>一个char代表一个unicode码，范围： 0~65536</p>\n</blockquote>\n</blockquote>\n<ol start=\"4\">\n<li>布尔型  <code>boolean</code></li>\n</ol>\n<blockquote>\n<p>boolean  =  1字节</p>\n<blockquote>\n<p>只有  true 和 false 两个值</p>\n</blockquote>\n</blockquote>\n<h2 id=\"引用数据类型\"><a href=\"#引用数据类型\" class=\"headerlink\" title=\"引用数据类型\"></a>引用数据类型</h2><ol>\n<li>数组 [ ]</li>\n<li>类class（抽象类abstract class）</li>\n<li>接口（interface）</li>\n<li>枚举（enum）</li>\n<li>注解@interface</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "计算机程序设计(Java)",
                "零基础学Java语言",
                "Java教程"
            ]
        },
        {
            "id": "http://jonayze.top/2021/03/04/computer-science/java/course-1/1_Java%E5%8E%86%E5%8F%B2%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "url": "http://jonayze.top/2021/03/04/computer-science/java/course-1/1_Java%E5%8E%86%E5%8F%B2%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "title": "1：Java历史和环境搭建",
            "date_published": "2021-03-03T22:29:01.000Z",
            "content_html": "<p>:::info<br>以下为个人学习笔记和习题整理<br>:::</p>\n<h1 id=\"Java历史\"><a href=\"#Java历史\" class=\"headerlink\" title=\"Java历史\"></a>Java历史</h1><h2 id=\"创始人\"><a href=\"#创始人\" class=\"headerlink\" title=\"创始人\"></a>创始人</h2><blockquote>\n<p>James · Gosling</p>\n</blockquote>\n<h2 id=\"公司\"><a href=\"#公司\" class=\"headerlink\" title=\"公司\"></a>公司</h2><blockquote>\n<p>SUN</p>\n<blockquote>\n<p>Stanford University Network</p>\n<blockquote>\n<p>SUN Microsystems</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h2 id=\"几个重大事件\"><a href=\"#几个重大事件\" class=\"headerlink\" title=\"几个重大事件\"></a>几个重大事件</h2><h3 id=\"1995\"><a href=\"#1995\" class=\"headerlink\" title=\"1995\"></a>1995</h3><blockquote>\n<p>正式发布</p>\n</blockquote>\n<h3 id=\"1996\"><a href=\"#1996\" class=\"headerlink\" title=\"1996\"></a>1996</h3><blockquote>\n<p>正式发布了可以下载的JDK工具包  JDK1.0</p>\n</blockquote>\n<h3 id=\"1999\"><a href=\"#1999\" class=\"headerlink\" title=\"1999\"></a>1999</h3><blockquote>\n<p>发布第二代Java平台 简称Java2 细化三个不同的版本</p>\n<ul>\n<li>标准版 Standard Edition    J2SE</li>\n<li>企业版 Enterprise Edition    J2EE</li>\n<li>微型版 Micro Edition    J2ME</li>\n</ul>\n</blockquote>\n<h3 id=\"2004\"><a href=\"#2004\" class=\"headerlink\" title=\"2004\"></a>2004</h3><blockquote>\n<p>JDK1.5版本 添加很多新的特性 Java5</p>\n</blockquote>\n<h3 id=\"2005\"><a href=\"#2005\" class=\"headerlink\" title=\"2005\"></a>2005</h3><blockquote>\n<p>Java6版本（经典）</p>\n</blockquote>\n<h3 id=\"2009\"><a href=\"#2009\" class=\"headerlink\" title=\"2009\"></a>2009</h3><blockquote>\n<p>Oracle公司以 74亿美元 收购了SUN公司</p>\n</blockquote>\n<hr>\n<h1 id=\"Java语言的特点\"><a href=\"#Java语言的特点\" class=\"headerlink\" title=\"Java语言的特点\"></a>Java语言的特点</h1><ul>\n<li>跨平台性（操作系统）</li>\n<li>面向对象</li>\n<li>简单性（摒弃了C++的  <del>多继承</del>  和  <del>指针</del> ）</li>\n<li>健壮性（也称鲁棒性）主要涉及：<strong>垃圾回收</strong>  <strong>异常处理</strong></li>\n<li>多线程</li>\n<li>大数据开发相关</li>\n</ul>\n<h2 id=\"跨平台性机制\"><a href=\"#跨平台性机制\" class=\"headerlink\" title=\"跨平台性机制\"></a>跨平台性机制</h2><h3 id=\"跨平台工具\"><a href=\"#跨平台工具\" class=\"headerlink\" title=\"跨平台工具\"></a>跨平台工具</h3><ol>\n<li><p>JVM （ Java Virtual Machine 虚拟机 ）</p>\n<blockquote>\n<p>临时内存中开辟一块空间，<strong>从Java源文件 .java 编译为JVM可执行的字节码 .class文件</strong>，后从字节码翻译为机器指令（二进制）。实际上JVM这个翻译员就是Java程序认识的操作系统。</p>\n<blockquote>\n<p>Java计算机高级编程语言和底层机器指令的区别在于机器指令只认识二进制 0 和 1 ，即由硬件组成的 不通电 和 通电 。</p>\n</blockquote>\n</blockquote>\n</li>\n<li><p>JRE （Java Runtime Environment 运行环境）</p>\n<blockquote>\n<p>编译字节码需要 JRE环境 的支持。有了JRE，可以运行别人写好的Java程序 。</p>\n<blockquote>\n<p><strong>注：JRE官方下载包中 包含JVM</strong></p>\n</blockquote>\n</blockquote>\n</li>\n<li><p>JDK （Java Development Kit 开发工具包）</p>\n<blockquote>\n<p>开发时需要用到的工具 。</p>\n<blockquote>\n<p>javac.exe  编译工具</p>\n<p>java.exe  执行工具</p>\n<blockquote>\n<p><strong>注：JDK官方下载包中 已经包含 JRE 和 JVM，安装JDK时会弹出窗口询问是否安装JRE，可选择关闭 。</strong></p>\n</blockquote>\n</blockquote>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"搭建环境（JDK）\"><a href=\"#搭建环境（JDK）\" class=\"headerlink\" title=\"搭建环境（JDK）\"></a>搭建环境（JDK）</h3><ol>\n<li><p>下载一个安装程序</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3JhY2xlLmNvbS8=\">Oracle官方下载地址</span></p>\n<blockquote>\n<p>需要注意版本与自己电脑的系统匹配</p>\n</blockquote>\n</blockquote>\n</li>\n<li><p>JDK安装后的文件目录介绍</p>\n<blockquote>\n<p>bin文件夹  全部都是工具</p>\n<p>include文件夹  包含了其它语言写的程序  native修饰符</p>\n<p>jre文件夹  包含运行环境</p>\n<p>lib文件夹  包含了人家写好的所有Java类</p>\n<p>src.zip压缩文件  源代码</p>\n</blockquote>\n</li>\n<li><p>JDK全局环境配置</p>\n<blockquote>\n<p>为什么需要全局配置 。</p>\n<blockquote>\n<p>因为源文件所在的路径与编译工具不在一起 。</p>\n<blockquote>\n<p>需要将这个工具放置在电脑中的某一个位置，这个位置是当前电脑所有目录都可以共同访问到的位置 ，它就是环境变量。</p>\n</blockquote>\n</blockquote>\n<p>全局配置流程</p>\n<blockquote>\n<ol>\n<li>我的电脑</li>\n<li>属性</li>\n<li>高级系统设置</li>\n<li>环境变量</li>\n</ol>\n<blockquote>\n<p>找到 <strong>Path</strong>变量，在里面新建一条 <strong>bin文件夹</strong> 的 <strong>路径</strong>，确定就行了。<strong>需要注意的是千万不要把其它不懂的路径也删了</strong>，不然系统的某些功能会出现问题 。</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"代码编译与执行\"><a href=\"#代码编译与执行\" class=\"headerlink\" title=\"代码编译与执行\"></a>代码编译与执行</h2><h3 id=\"如何编写一段Java源代码\"><a href=\"#如何编写一段Java源代码\" class=\"headerlink\" title=\"如何编写一段Java源代码\"></a>如何编写一段Java源代码</h3><ol>\n<li>先在任意地方创建以 后缀名 <strong>.java</strong> 结尾的文件，后使用记事本打开编辑 。方便后续学习，这里创建的文件名是 <strong>test.java</strong> 。</li>\n</ol>\n<blockquote>\n<p>先写一个关键字 <code>class</code>    表示类的意思</p>\n<p>类后面给它起一个名字    理论上是可以随便写的</p>\n</blockquote>\n<ol start=\"2\">\n<li>命名规则和规约</li>\n</ol>\n<blockquote>\n<ul>\n<li>规则（名字中可以含有如下信息）</li>\n</ul>\n<blockquote>\n<p>字母（区分大小写  <strong>敏感</strong>）</p>\n<p>数字（0-9 可以用 <strong>但不能用作开头</strong>）</p>\n<p>符号（英文的  _  和  $   ）</p>\n<p>中文（强烈不推荐，<strong>占据字节较大</strong>）</p>\n</blockquote>\n<ul>\n<li>规约</li>\n</ul>\n<blockquote>\n<p><strong>类名：</strong></p>\n<p>首字母大写 <code>TestOne</code></p>\n<p>如果两个以上的单词  每个单词的首字母都大写</p>\n<p>起名字要见名知义 尽量使用英文单词</p>\n<p><strong>变量：</strong></p>\n<p>驼峰式命名法  textDemoOne</p>\n<p>第一个单词首字母小写 后面 每个单词的首字母都大写</p>\n<p><strong>常量：</strong></p>\n<p>常量名英文全部大写，每个单词间用下划线隔开</p>\n</blockquote>\n</blockquote>\n<ol start=\"3\">\n<li>源代码编写</li>\n</ol>\n<pre><code class=\"java\">class DemoTwos&#123;\n    public static void main(String[] args)&#123;\n        System.out.println(&quot;谨腻子冲啊！！！&quot;);\n    &#125;\n&#125;\n\n// 除了 main 方法里的输出  指的是 args) 后面的 &#123;&#125;   ，基本是固定的一个写法 。\n// 以上的 args 和 class类名 一样 可以更改 。\n</code></pre>\n<h3 id=\"利用工具进行编译执行\"><a href=\"#利用工具进行编译执行\" class=\"headerlink\" title=\"利用工具进行编译执行\"></a>利用工具进行编译执行</h3><ol>\n<li><p>使用 doc命令窗口</p>\n<blockquote>\n<p>win + R   然后输入 <strong><code>cmd</code></strong> 指令开启 doc命令行窗口</p>\n<p>使用 cd 命令进入到编写源代码的文件夹下</p>\n</blockquote>\n</li>\n<li><p>编译执行</p>\n<blockquote>\n<p>进入到文件夹后，输入以下命令：</p>\n<p>编译java源文件    <strong><code>javac test.java</code></strong> ，可以发现在当前文件夹下新生成了一个后缀名为 <strong>.class</strong> 的文件 ，那就是给计算机看的 。</p>\n<p>执行java代码    <strong><code>java DemoTwos</code></strong> ，在doc命令窗口中输出了    <strong>谨腻子冲啊！！！</strong>    。</p>\n</blockquote>\n</li>\n</ol>\n<hr>\n<p>注：以上的 <strong>编写编译执行</strong> 过程 ，其实只是展示原理机制，方便认识学习。实际上后期写代码使用的是多功能编译器，更加智能方便 。虽说智能方便，学习过程中还是建议以全程手敲为主 。</p>\n",
            "tags": [
                "计算机科学",
                "计算机程序设计(Java)",
                "零基础学Java语言",
                "Java教程"
            ]
        },
        {
            "id": "http://jonayze.top/2020/08/13/computer-science/note/theme-shoka-doc/special/",
            "url": "http://jonayze.top/2020/08/13/computer-science/note/theme-shoka-doc/special/",
            "title": "Step.4 主题特殊功能",
            "date_published": "2020-08-13T13:45:48.000Z",
            "content_html": "<p>:::primary<br><a href=\"/computer-science/note/theme-shoka-doc/\">:rocket:快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">:love_letter:依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">:pushpin:基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">:rainbow:界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\"><strong>:unicorn:特殊功能</strong></a><br>:::</p>\n<p>:::info<br>以下介绍可以使用的markdown或者标签代码。<br>功能大部分基于<code>hexo-renderer-multi-markdown-it</code>渲染器，尤其是代码块的显示，与默认渲染器不兼容。<br>:::</p>\n<h1 id=\"links-链接块\"><a href=\"#links-链接块\" class=\"headerlink\" title=\"links 链接块\"></a><code>links</code> 链接块</h1><p>本功能参考NexT，基于Hexo Tag功能，用来建立友链或其他网址链接功能。</p>\n<p>文章中的使用格式：</p>\n<ol>\n<li>使用<code>links</code>标签块，包围<code>yml</code>语法书写的内容，字段包括</li>\n</ol>\n<p>–|–|–<br><code>site</code>|站点名称|必填<br><code>owner</code>|管理员名字|可选，默认为<code>site</code>的值<br><code>url</code>|站点链接|必填<br><code>desc</code>|站点描述|可选，默认为<code>url</code>的值<br><code>image</code>|站点图片|可选，默认为<code>images/404.png</code><br><code>color</code>|方块颜色|可选，默认为<code>#666</code></p>\n<pre><code class=\"raw\">&amp;#123;% links %&amp;#125;\n- site: #站点名称\n  owner: #管理员名字\n  url: #站点网址\n  desc: #简短描述\n  image: #一张图片\n  color: #颜色代码\n&amp;#123;% endlinks %&amp;#125;\n</code></pre>\n<p>举个栗子：</p>\n<pre><code class=\"raw\">&amp;#123;% links %&amp;#125;\n- site: 優萌初華\n  owner: 霜月琉璃\n  url: https://shoka.lostyu.me\n  desc: 琉璃的医学 &amp; 编程笔记\n  image: https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\n  color: &quot;#e9546b&quot;\n\n- site: 书谨华腻\n  owner: 谨腻子\n  url: https://jonayze.top\n  image: images/avatar.jpg\n\n- site: 優萌初華\n  url: https://shoka.lostyu.me\n  desc: 琉璃的医学 &amp; 编程笔记\n  color: &quot;#9d5b8b&quot;\n&amp;#123;% endlinks %&amp;#125;\n</code></pre>\n<div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div><div class=\"item\" title=\"谨腻子\"><a href=\"https://jonayze.top\" class=\"image\" data-background-image=\"/images/avatar.jpg\"></a>\n          <div class=\"info\">\n          <a href=\"https://jonayze.top\" class=\"title\">书谨华腻</a>\n          <p class=\"desc\">https://jonayze.top</p>\n          </div></div><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#9d5b8b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div>\n\n\n<ol start=\"2\">\n<li>以上标签块里的内容，还可以保存到一个<code>yml</code>文件中，然后使用<code>linksfile</code>标签。<br>其中，<code>path</code>位于<code>&lt;root&gt;/source</code>目录下。</li>\n</ol>\n<pre><code class=\"raw\">&amp;#123;% linksfile [path] %&amp;#125;\n</code></pre>\n<p>举个栗子：</p>\n<pre><code class=\"raw\">&amp;#123;% linksfile friends/_data.yml %&amp;#125;\n</code></pre>\n<h1 id=\"code代码块\"><a href=\"#code代码块\" class=\"headerlink\" title=\"code代码块\"></a><code>code</code>代码块</h1><p>使用<code>markdown-it-prism</code>进行代码高亮，支持显示行号、行高亮<code>mark</code>、命令行提示符<code>command</code>、代码块标题。</p>\n<p>基本格式：<code>[language] [title] [url] [link text] [mark] [command]</code></p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>描述</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>language</td>\n<td>- 支持的语言<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmlzbWpzLmNvbS8jc3VwcG9ydGVkLWxhbmd1YWdlcw==\">戳此</span></td>\n<td>null \\</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>- 如果不需要代码高亮，但希望显示代码块样式，则设为<code>raw</code></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>- 留空或设为<code>info</code>，将不显示代码高亮和代码块样式</td>\n</tr>\n<tr>\n<td>title</td>\n<td>代码块的标题文字</td>\n<td>null</td>\n</tr>\n<tr>\n<td>url</td>\n<td>代码块标题右侧显示的链接</td>\n<td>null</td>\n</tr>\n<tr>\n<td>link text</td>\n<td>上述链接显示的标题</td>\n<td>link</td>\n</tr>\n<tr>\n<td>mark</td>\n<td>行高亮显示，格式为<code>mark:行号,行号开始-行号结束,其他行号</code>。</td>\n<td>null \\</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>例如<code>mark:1,4-7,10</code>，将高亮显示第1、4、5、6、7、10行</td>\n</tr>\n<tr>\n<td>command</td>\n<td>命令行提示符，格式为`command:(“提示内容”:行号,行号</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>例如`command:(“[root@localhost] $”:1,9-10</td>\n</tr>\n</tbody></table>\n<pre><code class=\"raw\">```java 行高亮 https://shoka.lostyu.me 参考链接 mark:1,6-7\nimport java.util.Scanner;\n...\nScanner in = new Scanner(System.in);\n// 输入Scan之后，按下键盘 Alt + “/” 键，Eclipse下自动补全。\n\nSystem.out.println(in.nextLine());\nSystem.out.println(&quot;Hello&quot; + &quot; world.&quot;);\n```\n\n```bash 命令行提示符 command:(&quot;[root@localhost] $&quot;:1,9-10||&quot;[admin@remotehost] #&quot;:4-6)\npwd\n/usr/home/chris/bin\nls -la\ntotal 2\ndrwxr-xr-x   2 chris  chris     11 Jan 10 16:48 .\ndrwxr--r-x  45 chris  chris     92 Feb 14 11:10 ..\n-rwxr-xr-x   1 chris  chris    444 Aug 25  2013 backup\n-rwxr-xr-x   1 chris  chris    642 Jan 17 14:42 deploy\ngit add -A\ngit commit -m &quot;update&quot;\ngit push\n```\n</code></pre>\n<pre><code class=\"java\">import java.util.Scanner;\n...\nScanner in = new Scanner(System.in);\n// 输入Scan之后，按下键盘 Alt + “/” 键，Eclipse下自动补全。\n\nSystem.out.println(in.nextLine());\nSystem.out.println(&quot;Hello&quot; + &quot; world.&quot;);\n</code></pre>\n<pre><code class=\"bash\">pwd\n/usr/home/chris/bin\nls -la\ntotal 2\ndrwxr-xr-x   2 chris  chris     11 Jan 10 16:48 .\ndrwxr--r-x  45 chris  chris     92 Feb 14 11:10 ..\n-rwxr-xr-x   1 chris  chris    444 Aug 25  2013 backup\n-rwxr-xr-x   1 chris  chris    642 Jan 17 14:42 deploy\ngit add -A\ngit commit -m &quot;update&quot;\ngit push\n</code></pre>\n<h1 id=\"quiz-练习题与答案\"><a href=\"#quiz-练习题与答案\" class=\"headerlink\" title=\"quiz 练习题与答案\"></a><code>quiz</code> 练习题与答案</h1><p>这个功能是用来显示练习题的。<br>需要在Front Matter中添加<code>quiz: true</code>，以正确显示题型标签。</p>\n<pre><code class=\"raw\">---\ntitle: 练习题与答案\nquiz: true\n---\n\n1. 编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。 &#123;.quiz .true&#125;\n\n2. 有基类`SHAPE`，派生类`CIRCLE`，声明如下变量：  &#123;.quiz .multi&#125;\n    ```cpp\n    SHAPE shape1,*p1;\n    CIRCLE circle1,*q1;\n    ```\n    下列哪些项是“派生类对象替换基类对象”。\n    - `p1=&amp;circle1;` &#123;.correct&#125;\n    - `q1=&amp;shape1;`\n    - `shape1=circle1;` &#123;.correct&#125;\n    - `circle1=shape1;`\n&#123;.options&#125;\n    &gt; - :heavy_check_mark: 令基类对象的指针指向派生类对象\n    &gt; - :x: 派生类指针指向基类的引用\n    &gt; - :heavy_check_mark: 派生类对象给基类对象赋值\n    &gt; - :x: 基类对象给派生类对象赋值\n    &gt; &#123;.options&#125;\n\n3. 下列叙述正确的是 []&#123;.gap&#125; 。 &#123;.quiz&#125;\n    - 虚函数只能定义成无参函数\n    - 虚函数不能有返回值\n    - 能定义虚构造函数\n    - A、B、C都不对 &#123;.correct&#125;\n&#123;.options&#125;\n\n10. 如果定义`int e=8; double f=6.4, g=8.9;`，则表达式 `f+int(e/3*int(f+g)/2)%4` 的值为 [9.4]&#123;.gap&#125;。 &#123;.quiz .fill&#125;\n    &gt; 注意运算顺序和数据类型\n    &gt; [8.4]&#123;.mistake&#125;\n</code></pre>\n<p>点击选项可以显示答案，以及答案解析。</p>\n<ol>\n<li><p>下列叙述正确的是 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>虚函数只能定义成无参函数</li>\n<li>虚函数不能有返回值</li>\n<li>能定义虚构造函数</li>\n<li>A、B、C都不对 {.correct}<br>{.options}</li>\n</ul>\n</li>\n<li><p>有基类<code>SHAPE</code>，派生类<code>CIRCLE</code>，声明如下变量：  {.quiz .multi}</p>\n<pre><code class=\"cpp\">SHAPE shape1,*p1;\nCIRCLE circle1,*q1;\n</code></pre>\n<p> 下列哪些项是“派生类对象替换基类对象”。</p>\n<ul>\n<li><code>p1=&amp;circle1;</code> {.correct}</li>\n<li><code>q1=&amp;shape1;</code></li>\n<li><code>shape1=circle1;</code> {.correct}</li>\n<li><code>circle1=shape1;</code><br>{.options}<blockquote>\n<ul>\n<li>:heavy_check_mark: 令基类对象的指针指向派生类对象</li>\n<li>:x: 派生类指针指向基类的引用</li>\n<li>:heavy_check_mark: 派生类对象给基类对象赋值</li>\n<li>:x: 基类对象给派生类对象赋值<br>{.options}</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>编译时多态主要指运算符重载与函数重载，而运行时多态主要指虚函数。 {.quiz .true}</p>\n</li>\n<li><p>如果定义<code>int e=8; double f=6.4, g=8.9;</code>，则表达式 <code>f+int(e/3*int(f+g)/2)%4</code> 的值为 [9.4]{.gap}。 {.quiz .fill}</p>\n<blockquote>\n<p>注意运算顺序和数据类型<br>[8.4]{.mistake}</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"使用说明\"><a href=\"#使用说明\" class=\"headerlink\" title=\"使用说明\"></a>使用说明</h2><p>本功能基于<code>markdown-it-bracketed-spans</code>和<code>markdown-it-attrs</code></p>\n<table>\n<thead>\n<tr>\n<th>标签</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>&#123;.quiz&#125;</code></td>\n<td>选择题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .multi&#125;</code></td>\n<td>多选题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .true&#125;</code></td>\n<td>正确的判断题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .false&#125;</code></td>\n<td>错误的判断题</td>\n</tr>\n<tr>\n<td><code>&#123;.quiz .fill&#125;</code></td>\n<td>填空题</td>\n</tr>\n<tr>\n<td><code>[]&#123;.gap&#125;</code></td>\n<td>空白下划线</td>\n</tr>\n<tr>\n<td><code>[答案内容]&#123;.gap&#125;</code></td>\n<td>答案内容带下划线</td>\n</tr>\n<tr>\n<td><code>&#123;.options&#125;</code></td>\n<td>ABCDE选项</td>\n</tr>\n<tr>\n<td><code>&#123;.correct&#125;</code></td>\n<td>选择题的正确选项</td>\n</tr>\n<tr>\n<td><code>&gt;</code></td>\n<td>答案解析</td>\n</tr>\n<tr>\n<td><code>[8.4]&#123;.mistake&#125;</code></td>\n<td>错题备注</td>\n</tr>\n</tbody></table>\n<h1 id=\"emoji-绘文字\"><a href=\"#emoji-绘文字\" class=\"headerlink\" title=\"emoji 绘文字\"></a><code>emoji</code> 绘文字</h1><p>本功能基于<code>markdown-it-emoji</code>，所有<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hcmtkb3duLWl0L21hcmtkb3duLWl0LWVtb2ppL2Jsb2IvbWFzdGVyL2xpYi9kYXRhL2Z1bGwuanNvbg==\">标签参考戳此</span></p>\n<pre><code class=\"raw\">:kissing_heart:\n:ring:\n:notes:\n</code></pre>\n<p>:kissing_heart: :ring: :notes:</p>\n<h1 id=\"effects-文字特效\"><a href=\"#effects-文字特效\" class=\"headerlink\" title=\"effects 文字特效\"></a><code>effects</code> 文字特效</h1><p>本功能基于<code>markdown-it-ins</code>、 <code>markdown-it-bracketed-spans</code>和<code>markdown-it-attrs</code></p>\n<blockquote>\n<p>本主题风格颜色通用样式：default、primary、success、info、warning、danger</p>\n</blockquote>\n<pre><code class=\"raw\">++下划线++\n++波浪线++&#123;.wavy&#125;\n++着重点++&#123;.dot&#125;\n++紫色下划线++&#123;.primary&#125;\n++绿色波浪线++&#123;.wavy .success&#125;\n++黄色着重点++&#123;.dot .warning&#125;\n~~删除线~~\n~~红色删除线~~&#123;.danger&#125;\n==荧光高亮==\n[赤橙黄绿青蓝紫]&#123;.rainbow&#125;\n[红色]&#123;.red&#125;\n[粉色]&#123;.pink&#125;\n[橙色]&#123;.orange&#125;\n[红色]&#123;.yellow&#125;\n[绿色]&#123;.green&#125;\n[靛青]&#123;.aqua&#125;\n[蓝色]&#123;.blue&#125;\n[紫色]&#123;.purple&#125;\n[灰色]&#123;.grey&#125;\n快捷键 [Ctrl]&#123;.kbd&#125; + [C]&#123;.kbd .red&#125;\nH~2~0\n29^th^\n</code></pre>\n<p>:::warning<br>这段代码因为自动被pangu.js处理了一下，加了几个空格，导致直接复制代码不能正常显示。<br>正确的代码是<code>++下划线++</code> <code>~~删除线~~</code> <code>==荧光高亮==</code>，不能有空格哦。<br>:::</p>\n<p>++下划线++<br>++波浪线++{.wavy}<br>++着重点++{.dot}<br>++紫色下划线++{.primary}<br>++绿色波浪线++{.wavy .success}<br>++黄色着重点++{.dot .warning}<br><del>删除线</del><br><del>红色删除线</del>{.danger}<br>==荧光高亮==<br>[赤橙黄绿青蓝紫]{.rainbow}<br>[红色]{.red}<br>[粉色]{.pink}<br>[橙色]{.orange}<br>[黄色]{.yellow}<br>[绿色]{.green}<br>[靛青]{.aqua}<br>[蓝色]{.blue}<br>[紫色]{.purple}<br>[灰色]{.grey}<br>快捷键 [Ctrl]{.kbd} + [C]{.kbd .red}<br>H<del>2</del>0<br>29^th^</p>\n<h1 id=\"spoiler隐藏文字\"><a href=\"#spoiler隐藏文字\" class=\"headerlink\" title=\"spoiler隐藏文字\"></a><code>spoiler</code>隐藏文字</h1><p>本功能基于<code>markdown-it-spoiler</code>和<code>markdown-it-attrs</code></p>\n<pre><code class=\"raw\">!!黑幕黑幕黑幕黑幕黑幕黑幕!! ： 鼠标滑过显示内容\n!!模糊模糊模糊模糊模糊模糊!!&#123;.bulr&#125; ： 选中文字显示内容\n</code></pre>\n<p>!!黑幕黑幕黑幕黑幕黑幕黑幕!! ： 鼠标滑过显示内容<br>!!模糊模糊模糊模糊模糊模糊!!{.bulr} ： 选中文字显示内容</p>\n<h1 id=\"label-标签块\"><a href=\"#label-标签块\" class=\"headerlink\" title=\"label 标签块\"></a><code>label</code> 标签块</h1><p>本功能基于<code>markdown-it-bracketed-spans</code>和<code>markdown-it-attrs</code><br>有以下颜色可选</p>\n<pre><code class=\"raw\">[default]&#123;.label&#125;\n[primary]&#123;.label .primary&#125;\n[info]&#123;.label .info&#125;\n[:heavy_check_mark:success]&#123;.label .success&#125;\n[warning]&#123;.label .warning&#125;\n[:broken_heart:danger]&#123;.label .danger&#125;\n</code></pre>\n<p>[default]{.label}<br>[primary]{.label .primary}<br>[info]{.label .info}<br>[:heavy_check_mark:success]{.label .success}<br>[warning]{.label .warning}<br>[:broken_heart:danger]{.label .danger}</p>\n<h1 id=\"note-提醒块\"><a href=\"#note-提醒块\" class=\"headerlink\" title=\"note 提醒块\"></a><code>note</code> 提醒块</h1><p>本功能基于<code>markdown-it-container</code><br>标签为：</p>\n<p>–|–<br>开始行|<code>:::[风格颜色]</code><br>结束行|<code>:::</code></p>\n<pre><code class=\"raw\">:::default\n默认默认\n:::\n\n:::primary\n基本基本\n:::\n\n:::info\n提示提示\n:::\n\n:::success\n成功成功\n:::\n\n:::warning\n警告警告\n:::\n\n:::danger\n危险危险\n:::\n\n:::danger no-icon\n危险危险\n:::\n</code></pre>\n<p>:::default<br>默认默认<br>:::</p>\n<p>:::primary<br>基本基本<br>:::</p>\n<p>:::info<br>提示提示<br>:::</p>\n<p>:::success<br>成功成功<br>:::</p>\n<p>:::warning<br>警告警告<br>:::</p>\n<p>:::danger<br>危险危险<br>:::</p>\n<p>:::danger no-icon<br>没有图标<br>:::</p>\n<h1 id=\"tab标签卡\"><a href=\"#tab标签卡\" class=\"headerlink\" title=\"tab标签卡\"></a><code>tab</code>标签卡</h1><p>本功能基于<code>markdown-it-container</code><br>标签为：</p>\n<p>–|–<br>开始行|<code>;;;[同一ID] [标签名称]</code><br>结束行|<code>;;;</code></p>\n<pre><code class=\"raw\">;;;id1 卡片1\n这里是卡片1的内容\n**加粗**\n[success]&#123;.label .success&#125;\n\n&amp;#123;% links %&amp;#125;\n- site: 優萌初華\n  owner: 霜月琉璃\n  url: https://shoka.lostyu.me\n  desc: 琉璃的医学 &amp; 编程笔记\n  image: https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\n  color: &quot;#e9546b&quot;\n&amp;#123;% endlinks %&amp;#125;\n;;;\n\n;;;id1 卡片2\n这里是卡片2的内容\n:::danger\n危险危险\n:::\n- 第一行\n- 第二行\n;;;\n\n;;;id2 ②号标签卡片1\n这里是卡片1的内容\n;;;\n\n;;;id2 ②号标签卡片2\n这里是卡片2的内容\n;;;\n</code></pre>\n<p>;;;id1 卡片1<br>这里是卡片1的内容<br><strong>加粗</strong><br>[success]{.label .success}</p>\n<div class=\"links\"><div class=\"item\" title=\"霜月琉璃\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"https://cdn.jsdelivr.net/gh/amehime/shoka@latest/images/avatar.jpg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">琉璃的医学 & 编程笔记</p>\n          </div></div></div>\n<p>;;;</p>\n<p>;;;id1 卡片2<br>这里是卡片2的内容<br>:::danger<br>危险危险<br>:::</p>\n<ul>\n<li>第一行</li>\n<li>第二行<br>;;;</li>\n</ul>\n<p>;;;id2 ②号标签卡片1<br>这里是卡片1的内容<br>;;;</p>\n<p>;;;id2 ②号标签卡片2<br>这里是卡片2的内容<br>;;;</p>\n<h1 id=\"collapse-折叠块\"><a href=\"#collapse-折叠块\" class=\"headerlink\" title=\"collapse 折叠块\"></a><code>collapse</code> 折叠块</h1><p>本功能基于<code>markdown-it-container</code><br>标签为：</p>\n<p>–|–<br>开始行|<code>+++[风格颜色] [标题文字]</code><br>结束行|<code>+++</code></p>\n<pre><code class=\"raw\">+++ 默认默认 这里是一段文字\n++下划线++\n+++\n\n\n+++primary 紫色\n:::info\n参考信息\n:::\n\n- 第一行\n- 第二行\n+++\n\n\n+++info  蓝色\n;;;id3 卡片1\n这里是卡片1的内容\n;;;\n\n;;;id3 卡片2\n这里是卡片2的内容\n;;;\n+++\n\n+++success 绿色\n&amp;#123;% links %&amp;#125;\n- site: 優萌初華\n  url: https://shoka.lostyu.me\n  color: &quot;#e9546b&quot;\n&amp;#123;% endlinks %&amp;#125;\n+++\n\n+++warning 黄色\n!!警告警告警告警告警告!!&#123;.bulr&#125;\n[label]&#123;.label .success&#125;\n+++\n\n+++danger 红色\n[danger]&#123;.label .danger&#125;\n+++\n</code></pre>\n<p>+++ 默认默认 这里是一段文字<br>++下划线++<br>+++</p>\n<p>+++primary 紫色<br>:::info<br>参考信息<br>:::</p>\n<ul>\n<li>第一行</li>\n<li>第二行</li>\n</ul>\n<p>+++</p>\n<p>+++info  蓝色<br>;;;id3 卡片1<br>这里是卡片1的内容<br>++波浪线++{.wavy}<br>;;;</p>\n<p>;;;id3 卡片2<br>这里是卡片2的内容<br>;;;<br>+++</p>\n<p>+++success 绿色</p>\n<div class=\"links\"><div class=\"item\" title=\"優萌初華\" style=\"--block-color:#e9546b;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\" data-background-image=\"/images/404.png\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWU=\">優萌初華</span>\n          <p class=\"desc\">https://shoka.lostyu.me</p>\n          </div></div></div>\n<p>+++</p>\n<p>+++warning 黄色<br>!!警告警告警告警告警告!!{.bulr}<br>[label]{.label .success}<br>+++</p>\n<p>+++danger 红色<br>[danger]{.label .danger}<br>+++</p>\n<h1 id=\"taskList-待办事项\"><a href=\"#taskList-待办事项\" class=\"headerlink\" title=\"taskList 待办事项\"></a><code>taskList</code> 待办事项</h1><p>本功能基于<code>markdown-it-task-checkbox</code>。<br>可以利用<code>markdown-it-attrs</code>添加风格颜色，只可以给<code>ul</code>标签添加，需要新建两行。</p>\n<pre><code class=\"raw\">- [ ] 这是一个小叉叉\n- [x] 这是一个红色勾勾\n\n&#123;.danger&#125;\n\n- [ ] 未完成\n- [x] 完成\n\n&#123;.primary&#125;\n\n- [ ] 未完成\n- [x] 默认颜色\n</code></pre>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 这是一个小叉叉</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 这是一个红色勾勾</li>\n</ul>\n<p>{.danger}</p>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 未完成</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 完成</li>\n</ul>\n<p>{.primary}</p>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"> 未完成</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> 默认颜色</li>\n</ul>\n<h1 id=\"furigana文字注音\"><a href=\"#furigana文字注音\" class=\"headerlink\" title=\"furigana文字注音\"></a><code>furigana</code>文字注音</h1><p>原本用于日语汉字假名注音，但别的注音也可以。<br>为了兼容性，采用<code>markdown-it-ruby</code>的基本格式：<code>&#123;文字^注音&#125;</code>，并且为了兼容表格，将分隔符由<code>|</code>换成了<code>^</code>。<br>注音分隔基于<code>furigana-markdown-it</code><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZnVyaWdhbmEtbWFya2Rvd24taXQjcXVpY2stdXNhZ2U=\">显示说明看这里</span></p>\n<p>–|–<br><code>&#123;取り返す^とりかえす&#125;</code>|{取り返す^とりかえす}<br><code>&#123;可愛い犬^か+わい・い・いぬ&#125;</code>|{可愛い犬^か+わい・い・いぬ}<br><code>&#123;可愛い犬^か・わい・いいぬ&#125;</code>|{可愛い犬^か・わい・いいぬ}<br><code>&#123;アクセラレータ^accelerator&#125;</code> | {アクセラレータ^accelerator}<br><code>&#123;accelerator^アクセラレータ&#125;</code> | {accelerator^アクセラレータ}<br><code>&#123;食べる^たべる&#125;</code> | {食べる^たべる}<br><code>&#123;食べる^=たべる&#125;</code> | {食べる^=たべる}<br><code>&#123;あいうえお^*&#125;</code> | {あいうえお^*}<br><code>&#123;あいうえお^*❤&#125;</code> | {あいうえお^*❤}<br><code>&#123;常用账号^contact&#125;</code>|{常用账号^contact}</p>\n<h1 id=\"media多媒体\"><a href=\"#media多媒体\" class=\"headerlink\" title=\"media多媒体\"></a><code>media</code>多媒体</h1><p>本功能基于Hexo Tag功能，使用<code>media</code>标签，目前可选择两种类型，即<code>audio</code>和<code>video</code>。</p>\n<pre><code class=\"raw\">&amp;#123;% media audio %&amp;#125;\n...音频列表\n&amp;#123;% endmedia %&amp;#125;\n\n&amp;#123;% media video %&amp;#125;\n...视频列表\n&amp;#123;% endmedia %&amp;#125;\n</code></pre>\n<p>标签包绕一段<code>yml</code>格式的内容，格式与<a href=\"../config/#%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90\">背景音乐</a>的配置类似。</p>\n<p>亦可以直接使用网易云、虾米、QQ音乐的播放列表、单曲。</p>\n<pre><code class=\"raw\">&amp;#123;% media audio %&amp;#125;\n- title: 列表1\n  list:\n    - https://music.163.com/#/playlist?id=2943811283\n    - https://music.163.com/#/playlist?id=2297706586\n- title: 列表2\n  list:\n    - https://music.163.com/#/playlist?id=2031842656\n&amp;#123;% endmedia %&amp;#125;\n\n\n&amp;#123;% media video %&amp;#125;\n- name: &quot;测试1&quot;\n  url: https://cdn.kastatic.org/ka-youtube-converted/O_nY1TM2RZM.mp4/O_nY1TM2RZM.mp4#t=0\n- name: &quot;测试2&quot;\n  url: https://cdn.kastatic.org/ka-youtube-converted/O_nY1TM2RZM.mp4/O_nY1TM2RZM.mp4#t=0\n&amp;#123;% endmedia %&amp;#125;\n</code></pre>\n<div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表1\",\"list\":[\"https://music.163.com/#/playlist?id=2943811283\",\"https://music.163.com/#/playlist?id=2297706586\"]},{\"title\":\"列表2\",\"list\":[\"https://music.163.com/#/playlist?id=2031842656\"]}]'></div></div>\n\n\n<div class=\"media-container\"><div class=\"player\" data-type=\"video\" data-src='[{\"name\":\"测试1\",\"url\":\"https://cdn.kastatic.org/ka-youtube-converted/O_nY1TM2RZM.mp4/O_nY1TM2RZM.mp4#t=0\"},{\"name\":\"测试2\",\"url\":\"https://cdn.kastatic.org/ka-youtube-converted/O_nY1TM2RZM.mp4/O_nY1TM2RZM.mp4#t=0\"}]'></div></div>\n\n\n<h1 id=\"math数学公式\"><a href=\"#math数学公式\" class=\"headerlink\" title=\"math数学公式\"></a><code>math</code>数学公式</h1><p>本功能基于<code>markdown-it-katex</code><br>在Front Matter中添加<code>math: true</code>以支持<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rYXRleC5vcmcv\">KaTex</span></p>\n<pre><code class=\"raw\">---\ntitle: 数学公式显示\nmath: true\n---\n\n行内公式：$\\sqrt&#123;3x-1&#125;+(1+x)^2$\n\n独立块显示：\n$$\\begin&#123;array&#125;&#123;c&#125;\n\n\\nabla \\times \\vec&#123;\\mathbf&#123;B&#125;&#125; -\\, \\frac1c\\, \\frac&#123;\\partial\\vec&#123;\\mathbf&#123;E&#125;&#125;&#125;&#123;\\partial t&#125; &amp;\n= \\frac&#123;4\\pi&#125;&#123;c&#125;\\vec&#123;\\mathbf&#123;j&#125;&#125;    \\nabla \\cdot \\vec&#123;\\mathbf&#123;E&#125;&#125; &amp; = 4 \\pi \\rho \\\\\n\n\\nabla \\times \\vec&#123;\\mathbf&#123;E&#125;&#125;\\, +\\, \\frac1c\\, \\frac&#123;\\partial\\vec&#123;\\mathbf&#123;B&#125;&#125;&#125;&#123;\\partial t&#125; &amp; = \\vec&#123;\\mathbf&#123;0&#125;&#125; \\\\\n\n\\nabla \\cdot \\vec&#123;\\mathbf&#123;B&#125;&#125; &amp; = 0\n\n\\end&#123;array&#125;$$\n</code></pre>\n<p>行内公式：$\\sqrt{3x-1}+(1+x)^2$</p>\n<p>独立块显示：<br>$$\\begin{array}{c}</p>\n<p>\\nabla \\times \\vec{\\mathbf{B}} -, \\frac1c, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} &amp;<br>= \\frac{4\\pi}{c}\\vec{\\mathbf{j}}    \\nabla \\cdot \\vec{\\mathbf{E}} &amp; = 4 \\pi \\rho \\</p>\n<p>\\nabla \\times \\vec{\\mathbf{E}}, +, \\frac1c, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} &amp; = \\vec{\\mathbf{0}} \\</p>\n<p>\\nabla \\cdot \\vec{\\mathbf{B}} &amp; = 0</p>\n<p>\\end{array}$$</p>\n<h1 id=\"mermaid流程图\"><a href=\"#mermaid流程图\" class=\"headerlink\" title=\"mermaid流程图\"></a><code>mermaid</code>流程图</h1><p>本功能基于<code>markdown-it-mermaid</code><br>在Front Matter中添加<code>mermaid: true</code>以支持<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMv\">Mermaid</span></p>\n<pre><code class=\"raw\">---\ntitle: 流程图显示\nmermaid: true\n---\n\n```mermaid\ngraph LR\n    A[Square Rect] -- Link text --&gt; B((Circle))\n    A --&gt; C(Round Rect)\n    B --&gt; D&#123;Rhombus&#125;\n    C --&gt; D\n```\n\n```mermaid\nsequenceDiagram\n    loop Daily query\n        Alice-&gt;&gt;Bob: Hello Bob, how are you?\n        alt is sick\n            Bob-&gt;&gt;Alice: Not so good :(\n        else is well\n            Bob-&gt;&gt;Alice: Feeling fresh like a daisy\n        end\n\n        opt Extra response\n            Bob-&gt;&gt;Alice: Thanks for asking\n        end\n    end\n```\n</code></pre>\n<pre><code class=\"mermaid\">graph LR\n    A[Square Rect] -- Link text --&gt; B((Circle))\n    A --&gt; C(Round Rect)\n    B --&gt; D&#123;Rhombus&#125;\n    C --&gt; D\n</code></pre>\n<pre><code class=\"mermaid\">sequenceDiagram\n    loop Daily query\n        Alice-&gt;&gt;Bob: Hello Bob, how are you?\n        alt is sick\n            Bob-&gt;&gt;Alice: Not so good :(\n        else is well\n            Bob-&gt;&gt;Alice: Feeling fresh like a daisy\n        end\n\n        opt Extra response\n            Bob-&gt;&gt;Alice: Thanks for asking\n        end\n    end\n</code></pre>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo"
            ]
        },
        {
            "id": "http://jonayze.top/2020/08/13/computer-science/note/theme-shoka-doc/display/",
            "url": "http://jonayze.top/2020/08/13/computer-science/note/theme-shoka-doc/display/",
            "title": "Step.3 界面显示",
            "date_published": "2020-08-13T13:12:48.000Z",
            "content_html": "<p>:::primary<br><a href=\"/computer-science/note/theme-shoka-doc/\">:rocket:快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">:love_letter:依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">:pushpin:基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\"><strong>:rainbow:界面显示</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">:unicorn:特殊功能</a><br>:::</p>\n<h1 id=\"首页置顶文章\"><a href=\"#首页置顶文章\" class=\"headerlink\" title=\"首页置顶文章\"></a>首页置顶文章</h1><p>在文章的Front Matter设置<code>sticky: true</code>，则该文章将显示在首页最上方的<code>置顶文章</code>列。<br>多篇文章按照发布时间倒序排列，不分页。</p>\n<pre><code class=\"raw\">---\ntitle: 置顶文章\nsticky: true\n---\n</code></pre>\n<h1 id=\"首页精选分类\"><a href=\"#首页精选分类\" class=\"headerlink\" title=\"首页精选分类\"></a>首页精选分类</h1><p>想要在首页显示分类翻转块，需要按照以下示例的方式，给需要显示的分类加上封面图。</p>\n<ol>\n<li><p>首先，修改站点配置：<br> 找到<code>category_map:</code>，配置每个分类对应的英文映射，比如：</p>\n<pre><code class=\"yml\">category_map:\n  计算机科学: computer-science\n  Java: java\n  C++: cpp\n  二进制杂谈: note\n  计算机程序设计（C++）-西安交通大学: course-1\n  零基础学Java语言-浙江大学-翁恺: course-1\n  面向对象程序设计-Java语言-浙江大学-翁恺: course-2\n</code></pre>\n<blockquote>\n<p>注意：hexo会自动处理路径中的特殊字符，~`!@#$%^&amp;*()-_+=[]{}|\\;:”‘&lt;&gt;,.?以及空格，这些全部会被替换成<code>-</code><br>所以避免在设置中使用上述字符，否则可导致无法抓取到目录下的<code>cover.jpg</code></p>\n</blockquote>\n</li>\n<li><p>在<code>&lt;root&gt;/source/_posts</code>文件夹相应的目录里，存放封面图<br>例子：如 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9qYXZhL2NvdXJzZS0xL3dlZWstMS8=\">第1周 计算</span> 这篇文章。<br> 所处的分类是</p>\n<pre><code class=\"yml\">categories:\n- [计算机科学, Java, 零基础学Java语言-浙江大学-翁恺]\n</code></pre>\n<p> 现在需要在首页显示<code>零基础学Java语言-浙江大学-翁恺</code>这个分类，翻转卡片后，显示这个分类下的文章们。<br> 而该分类经过英文映射，它的路径将是<code>/computer-science/java/course-1/</code>。</p>\n<p> 那么，请在<code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>的目录下放置<code>cover.jpg</code>文件。<br> 只要<code>分类路径</code>对应的目录下<strong>存在</strong><code>cover.jpg</code>文件，这个分类就会在首页显示。<br> 在进行<code>hexo g</code>时，本分类的封面图会自动被复制到public目录里相应的位置。</p>\n</li>\n<li><p>事实上，为了方便文章管理，这个分类下所有文章的md文件，我都会放在<code>&lt;root&gt;/source/_posts/computer-science/java/course-1/</code>这个目录下。</p>\n<p> 且站点配置文件里，永久链接设置如下</p>\n<pre><code class=\"yml\">permalink: :title/\n</code></pre>\n<p> <code>hexo g</code>后，文章的html文件们将全部生成到<code>&lt;root&gt;/public/computer-science/java/course-1/</code>目录。<br> 具体可以查看<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvc2hva2E=\">本博客的github仓库</span>。</p>\n</li>\n<li><p>文章详情界面中的<code>系列文章</code>，显示的是与当前文章同一分类的其他文章，并按照文章名正序排序。</p>\n</li>\n</ol>\n<blockquote>\n<p>o(*￣▽￣*)ゞ<br>其实，不设置<code>category_map</code>也可以，只要在分类路径对应的文件夹下存在<code>cover.jpg</code>文件就行。<br>现在，这项功能与<code>category_dir</code>的配置也无关，<code>hexo g</code>生成后，图片会自动被转移到<code>category_dir</code>的相关子目录下。</p>\n</blockquote>\n<h1 id=\"文章封面图\"><a href=\"#文章封面图\" class=\"headerlink\" title=\"文章封面图\"></a>文章封面图</h1><ul>\n<li><p>如果文章的Front Matter设置了<code>cover: image path</code>，则封面会显示这张图片。</p>\n<pre><code class=\"yml\">title: Images\ncover: assets/wallpaper-2572384.jpg\n# 或者写成\ncover: http://placehold.it/350x150.jpg\n---\n</code></pre>\n<p>这里<code>cover</code>的值可以是位于<code>source</code>目录里的图片文件，此处是<code>&lt;root&gt;/source/assets/wallpaper-2572384.jpg</code>文件，也可以是一个某网址。</p>\n</li>\n<li><p>如果文章是一个<code>gallery post</code>，即Front Matter设置了<code>photos</code>，则会封面会显示设置的第一张图片。</p>\n<pre><code class=\"yml\">title: Gallery Post\nphotos:\n- assets/wallpaper-2572384.jpg\n- assets/wallpaper-2311325.jpg\n- assets/wallpaper-878514.jpg\n- http://placehold.it/350x150.jpg\n---\n</code></pre>\n<p>此时默认会显示第一个图片，即位于<code>&lt;root&gt;/source/assets/</code>目录里的<code>wallpaper-2572384.jpg</code>。</p>\n</li>\n<li><p>如果站点配置中设置了<code>post_asset_folder: true</code>，那么上述本地图片路径应为<code>&lt;root&gt;/source/_posts/文章同名的文件夹/assets/wallpaper-2572384.jpg</code>，当然此时<code>assets</code>目录可以省掉。</p>\n</li>\n<li><p>如果以上设置均不存在，将显示一张随机图片，<a href=\"../config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93\">随机图库配置戳此</a>。</p>\n</li>\n</ul>\n<h1 id=\"图片展示与相册\"><a href=\"#图片展示与相册\" class=\"headerlink\" title=\"图片展示与相册\"></a>图片展示与相册</h1><p>在文章的Front Matter设置<code>fancybox: false</code>，可以关闭文章页的图片展示功能。<br>使用<span class=\"exturl\" data-url=\"aHR0cDovL21pcm9tYW5uaW5vLmdpdGh1Yi5pby9KdXN0aWZpZWQtR2FsbGVyeS8=\">Justified-Gallery</span>对Gallery Post内图案进行排列。</p>\n<p>下面介绍一些小技巧：</p>\n<ol>\n<li>让图案下方显示<code>title</code>的markdown代码<pre><code class=\"raw\">![这里是alt](https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg &quot;这里是title&quot;)\n</code></pre>\n<img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicis081o9j20zk0m8dmr.jpg\" alt=\"这里是alt\" title=\"这里是title\"></li>\n</ol>\n<ol start=\"2\">\n<li>除了在Front Matter里配置<code>photos</code>可以显示相册图案列表外，还可以这样写<br>```raw<h2 id=\"图案列表No-1\"><a href=\"#图案列表No-1\" class=\"headerlink\" title=\"图案列表No.1\"></a>图案列表No.1</h2><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclfdu6exj20zk0m87hw.jpg\" title=\"这里是title\"><br><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclflwv2aj20zk0m84qp.jpg\"><br><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclg5ms2rj20zk0m8u0x.jpg\"><br><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclhnx9glj20zk0m8npd.jpg\"><br>{.gallery}</li>\n</ol>\n<h2 id=\"图案列表No-2\"><a href=\"#图案列表No-2\" class=\"headerlink\" title=\"图案列表No.2\"></a>图案列表No.2</h2><p><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicitht3xtj20zk0m8k5v.jpg\"><br><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1giclil3m4ej20zk0m8tn8.jpg\"><br><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gicljgocqbj20zk0m8e81.jpg\"><br><img data-src=\"https://tva3.sinaimg.cn/large/6833939bly1gipetfk5zwj20zk0m8e81.jpg\"><br>{.gallery data-height=”220”}</p>\n<pre><code>\n`data-height`用来设置每行的高度，默认为`120`\n\n## 图案列表No.1\n![](https://tva3.sinaimg.cn/large/6833939bly1giclfdu6exj20zk0m87hw.jpg &quot;这里是title&quot;)\n![](https://tva3.sinaimg.cn/large/6833939bly1giclflwv2aj20zk0m84qp.jpg)\n![](https://tva3.sinaimg.cn/large/6833939bly1giclg5ms2rj20zk0m8u0x.jpg)\n![](https://tva3.sinaimg.cn/large/6833939bly1giclhnx9glj20zk0m8npd.jpg)\n&#123;.gallery&#125;\n\n## 图案列表No.2\n![](https://tva3.sinaimg.cn/large/6833939bly1gicitht3xtj20zk0m8k5v.jpg)\n![](https://tva3.sinaimg.cn/large/6833939bly1giclil3m4ej20zk0m8tn8.jpg)\n![](https://tva3.sinaimg.cn/large/6833939bly1gicljgocqbj20zk0m8e81.jpg)\n![](https://tva3.sinaimg.cn/large/6833939bly1gipetfk5zwj20zk0m8e81.jpg)\n&#123;.gallery data-height=&quot;220&quot;&#125;\n\n\n# 自定义页面配色\n主题配色全部在`&lt;root&gt;/themes/shoka/source/css/_colors.styl`文件中，可以自行查看。\n\n在`&lt;root&gt;/source/_data/`目录新建文件`colors.styl`，在此文件中添改样式。\n\n&gt; 自定义`colors.styl`文件将覆盖主题默认样式，为了避免出错，请保证原有样式名均存在，在原有样式基础上进行增删改。\n\n主题支持在`&lt;root&gt;/source/_data/`目录建立三个自定义`styl`文件：\n\n自定义文件名|对应默认样式文件|样式功能\n--|--|--\n`colors.styl`|`_colors.styl`|页面配色\n`iconfont.styl`|`_iconfont.styl`|[图标样式](../config/#iconfont图标)\n`custom.styl`| - | 任意自定义样式\n\n# 自定义主题图片\n如果想要修改主题的`&lt;root&gt;/themes/shoka/source/images/`目录内的某张图片，请在`&lt;root&gt;/source/_data/`目录新建目录`images`，并在这个文件夹中添加++同名++文件，部署时将自动覆盖主题内的默认图片。\n\n可以用此方法自定义头像、打赏二维码等图片，并且避免覆盖更新主题时遗失自定义文件。\n\n# 自定义语言包\n本功能参考NexT，主要可以用来定义菜单等处显示的文字，且可以方便主题无脑覆盖升级。\n\n在`&lt;root&gt;/source/_data/`目录新建文件`languages.yml`。\n\n按照以下格式添加配置项：\n\n```yml\n# language\nzh-CN:\n  # items\n  post:\n    copyright:\n      # the translation you perfer\n      author: 本文博主\nen:\n  menu:\n    travellings: Travellings\n</code></pre>\n<p>可以参考主题目录下的<code>example/source/_data</code>文件夹。</p>\n<blockquote>\n<p>站点配置及文件的Front Matter中，<code>language</code>项只支持<code>zh-CN</code>、<code>zh-HK</code>、<code>zh-TW</code>、<code>ja</code>、<code>en</code>。<br>类似写成<code>zh_CN</code>这样是不可以的。</p>\n</blockquote>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo"
            ]
        },
        {
            "id": "http://jonayze.top/2020/08/13/computer-science/note/theme-shoka-doc/config/",
            "url": "http://jonayze.top/2020/08/13/computer-science/note/theme-shoka-doc/config/",
            "title": "Step.2 基本配置",
            "date_published": "2020-08-13T12:56:48.000Z",
            "content_html": "<p>:::primary<br><a href=\"/computer-science/note/theme-shoka-doc/\">:rocket:快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">:love_letter:依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\"><strong>:pushpin:基本配置</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">:rainbow:界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">:unicorn:特殊功能</a><br>:::</p>\n<h1 id=\"站点别称\"><a href=\"#站点别称\" class=\"headerlink\" title=\"站点别称\"></a>站点别称</h1><pre><code class=\"yml\">alternate: Yume Shoka\n</code></pre>\n<p>这里设置的名称代替Logo，显示在页面顶部，以及页尾:copyright:处</p>\n<h1 id=\"静态文件目录\"><a href=\"#静态文件目录\" class=\"headerlink\" title=\"静态文件目录\"></a>静态文件目录</h1><pre><code class=\"yml\">statics: / #//cdn.jsdelivr.net/gh/amehime/shoka@latest/\n</code></pre>\n<p>默认值是<code>/</code>，指使用本地静态文件<br>可以修改成<code>//cdn.jsdelivr.net/gh/您的github用户名/您的项目名@latest/</code>这种形式，以使用jsDelivr进行加速。<br>PS：jsDelivr并不是实时更新，重新生成文件后需要耐心等待</p>\n<pre><code class=\"yml\">css: css\njs: js\nimages: images\n</code></pre>\n<p>静态文件所处目录的实际目录名，这些一般不改。</p>\n<h1 id=\"夜间模式\"><a href=\"#夜间模式\" class=\"headerlink\" title=\"夜间模式\"></a>夜间模式</h1><pre><code class=\"yml\">darkmode: # true\n</code></pre>\n<p>默认情况下，是否开启夜间模式取决于（优先级从高到低）：</p>\n<ol>\n<li>访客点击页面头部切换按钮的自行选择</li>\n<li>访客切换了浏览设备的主题色调</li>\n<li>您的<code>darkmode</code>配置项</li>\n</ol>\n<h1 id=\"自动定位\"><a href=\"#自动定位\" class=\"headerlink\" title=\"自动定位\"></a>自动定位</h1><pre><code class=\"yml\">auto_scroll: # false\n</code></pre>\n<p>默认情况下，再次打开页面时，会自动滚动到上次浏览的位置。<br>这个选项设为<code>false</code>时将停用此功能。</p>\n<h1 id=\"加载动画\"><a href=\"#加载动画\" class=\"headerlink\" title=\"加载动画\"></a>加载动画</h1><pre><code class=\"yml\"># 是否显示页面加载动画loading-cat\nloader:\n  start: true # 当初次打开页面时，显示加载动画\n  switch: true # tab切换到其他页面时，显示加载动画\n</code></pre>\n<p>tab切换后只是显示loading动画，实际并未重新加载页面</p>\n<h1 id=\"页面特效\"><a href=\"#页面特效\" class=\"headerlink\" title=\"页面特效\"></a>页面特效</h1><p>单击页面的烟花效果配置如下</p>\n<pre><code class=\"yml\">fireworks:\n  enable: true # 是否启用\n  color: # 烟花颜色\n    - &quot;rgba(255,182,185,.9)&quot;\n    - &quot;rgba(250,227,217,.9)&quot;\n    - &quot;rgba(187,222,214,.9)&quot;\n    - &quot;rgba(138,198,209,.9)&quot;\n</code></pre>\n<h1 id=\"加载谷歌字体\"><a href=\"#加载谷歌字体\" class=\"headerlink\" title=\"加载谷歌字体\"></a>加载谷歌字体</h1><pre><code class=\"yml\">font:\n  enable: true\n  # Font options:\n  # `external: true` will load this font family from `host` above.\n  # `family: Times New Roman`. Without any quotes.\n  # `size: x.x`. Use `em` as unit. Default: 1 (16px)\n\n  # Global font settings used for all elements inside &lt;body&gt;.\n  global:\n    external: true\n    family: Mulish\n    size:\n\n  # Font settings for alternate title.\n  logo:\n    external: true\n    family: Fredericka the Great\n    size: 3.5\n\n  # Font settings for site title.\n  title:\n    external: true\n    family: Noto Serif JP\n    size: 2.5\n\n  # Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).\n  headings:\n    external: true\n    family: Noto Serif SC\n    size:\n\n  # Font settings for posts.\n  posts:\n    external: true\n    family:\n\n  # Font settings for &lt;code&gt; and code blocks.\n  codes:\n    external: true\n    family: Inconsolata\n</code></pre>\n<p>此功能基本参考NexT。<br>加粗标题的字体总是使用<code>Noto Serif</code>，为了正确友好的显示日文中的汉字，会先后加载<code>headings</code>和<code>title</code>的字体设置。</p>\n<h1 id=\"iconfont图标\"><a href=\"#iconfont图标\" class=\"headerlink\" title=\"iconfont图标\"></a><code>iconfont</code>图标</h1><p>主题没有直接使用Font Awesome，是因为用不到那么多icon感觉非常浪费，因此在Iconfont上重新建立了一个项目。<br><code>font-family</code>设为<code>ic</code>，所有字体样式前缀为<code>i-</code>，具体参见<code>&lt;root&gt;/themes/shoka/source/css/_iconfont.styl</code>。</p>\n<pre><code class=\"yml\"># project of https://www.iconfont.cn/\n# //at.alicdn.com/t/font_1832207_c8i9n1ulxlt.css =&gt; 1832207_c8i9n1ulxlt\niconfont: &quot;1832207_c8i9n1ulxlt&quot;\n</code></pre>\n<p>如果需要添加或修改，请留言告诉我您的<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvbmZvbnQuY24v\">Iconfont</span>用户名，我将把您添加到目前的<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvbmZvbnQuY24vbWFuYWdlL2luZGV4P21hbmFnZV90eXBlPW15cHJvamVjdHMmcHJvamVjdElkPTE4MzIyMDc=\">项目</span>中。</p>\n<p>添加权限为<code>只读</code>，此后您可以任意全选，批量保存到购物车中，添加至您自己的项目里，并将主题配置文件中的<code>iconfont</code>值改为您的项目。</p>\n<p>注意，您的项目应设置<code>FontClass/Symbol 前缀</code>为<code>i-</code>。</p>\n<p>在<code>&lt;root&gt;/source/_data/</code>目录新建文件<code>iconfont.styl</code>，把新增或修改的图标样式复制到这个文件中。</p>\n<blockquote>\n<p>自定义<code>iconfont.styl</code>文件将覆盖主题默认样式，为了避免出错，请保证原有样式名均存在，在原有样式基础上进行增删改。</p>\n</blockquote>\n<h1 id=\"菜单与社交按钮\"><a href=\"#菜单与社交按钮\" class=\"headerlink\" title=\"菜单与社交按钮\"></a>菜单与社交按钮</h1><pre><code class=\"yml\">menu:\n  home: / || home\n  about: /about/ || user\n  posts:\n    default: / || feather\n    archives: /archives/ || list-alt\n    categories: /categories/ || th\n    tags: /tags/ || tags\n  # friends: /friends/ || heart\n  # links: /links/ || magic\n\nsocial:\n  github: https://github.com/yourname || github || &quot;#191717&quot;\n  #google: https://plus.google.com/yourname || google\n  twitter: https://twitter.com/yourname || twitter || &quot;#00aff0&quot;\n  zhihu: https://www.zhihu.com/people/yourname || zhihu || &quot;#1e88e5&quot;\n  music: https://music.163.com/#/user/home?id=yourid || cloud-music || &quot;#e60026&quot;\n  weibo: https://weibo.com/yourname || weibo || &quot;#ea716e&quot;\n  about: https://about.me/yourname || address-card || &quot;#3b5998&quot;\n  #email: mailto:yourname@mail.com || envelope || &quot;#55acd5&quot;\n  #facebook: https://www.facebook.com/yourname || facebook\n  #stackoverflow: https://stackoverflow.com/yourname || stack-overflow\n  #youtube: https://youtube.com/yourname || youtube\n  #instagram: https://instagram.com/yourname || instagram\n  #skype: skype:yourname?call|chat || skype\n  #douban: https://www.douban.com/people/yourname/ || douban\n</code></pre>\n<p>如上，使用<code>||</code>作为分隔符，依次为 <code>链接 || 图标 || 颜色</code>。<br>注意，只需要写图标名称，如<code>github</code>，则会自动转换为<code>ic i-github</code>。<br>十六进制颜色码需要<code>&quot;&quot;</code>包绕。</p>\n<p><code>menu</code> 支持一级子目录，子目录设置中的第一项必须为<code>default</code>，用来定义父级按钮的样式。</p>\n<p>菜单显示文字可以在语言包中定义，<a href=\"../display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80%E5%8C%85\">具体请戳这里</a></p>\n<h1 id=\"边栏配置\"><a href=\"#边栏配置\" class=\"headerlink\" title=\"边栏配置\"></a>边栏配置</h1><p>边栏可以选择在左侧，或右侧<br>修改头像文件的地址，相对于静态文件目录<code>images</code>中配置的路径。</p>\n<pre><code class=\"yml\">sidebar:\n  # Sidebar Position.\n  position: left\n  #position: right\n  # Replace the default avatar image and set the url here.\n  avatar: avatar.jpg\n</code></pre>\n<p>可以将自己的图片放在<code>&lt;root&gt;/source/_data/images/</code>目录，甚至以同名覆盖主题内默认的头像图片，<a href=\"../display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E5%9B%BE%E7%89%87\">具体请戳这里</a></p>\n<h1 id=\"底部widgets\"><a href=\"#底部widgets\" class=\"headerlink\" title=\"底部widgets\"></a>底部widgets</h1><p>目前页面底部可以显示两个小部件，即<code>随机文章</code>和<code>最近评论</code>。</p>\n<pre><code class=\"yml\">widgets:\n  random_posts: true # 显示随机文章\n  recent_comments: true # 显示最近评论\n</code></pre>\n<h1 id=\"字数及阅读时间统计\"><a href=\"#字数及阅读时间统计\" class=\"headerlink\" title=\"字数及阅读时间统计\"></a>字数及阅读时间统计</h1><p>安装好<code>hexo-symbols-count-time</code>插件后，不需要修改站点配置文件，直接使用插件默认配置就行。</p>\n<p>需要修改主题配置文件，找到两处<code>cout</code>，修改为<code>true</code>：</p>\n<pre><code class=\"yml\"># 页尾全站统计\nfooter:\n  since: 2010\n  count: true\n\n# 文章界面统计\npost:\n  count: true\n</code></pre>\n<h1 id=\"文章评论\"><a href=\"#文章评论\" class=\"headerlink\" title=\"文章评论\"></a>文章评论</h1><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly92YWxpbmUuanMub3JnL3F1aWNrc3RhcnQuaHRtbA==\">如何获取LeanCloud的appId和appKey</span>。</p>\n<pre><code class=\"yml\">valine:\n  appId: #Your_appId\n  appKey: #Your_appkey\n  placeholder: ヽ(○´∀`)ﾉ♪ # Comment box placeholder\n  avatar: mp # Gravatar style : mp, identicon, monsterid, wavatar, robohash, retro\n  pageSize: 10 # Pagination size\n  lang: zh-CN\n  visitor: true # 文章访问量统计\n  NoRecordIP: false # 不记录IP\n  serverURLs: # When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)\n  powerMode: true # 默认打开评论框输入特效\n  tagMeta:\n    visitor: 新朋友\n    master: 主人\n    friend: 小伙伴\n    investor: 金主粑粑\n  tagColor:\n    master: &quot;var(--color-orange)&quot;\n    friend: &quot;var(--color-aqua)&quot;\n    investor: &quot;var(--color-pink)&quot;\n  tagMember:\n    master:\n      # - hash of master@email.com\n      # - hash of master2@email.com\n    friend:\n      # - hash of friend@email.com\n      # - hash of friend2@email.com\n    investor:\n      # - hash of investor1@email.com\n</code></pre>\n<p>tag标签显示在评论者名字的后面，默认是<code>tagMeta.visitor</code>对应的值。<br>在<code>tagMeta</code>和<code>tagColor</code>中，除了<code>visitor</code>这个key不能修改外，其他key都可以换一换，但需要保证一致性。</p>\n<pre><code class=\"yml\">  tagMeta:\n    visitor: 游客\n    admin: 管理员\n    waifu: 我老婆\n  tagColor:\n    visitor: &quot;#855194&quot;\n    admin: &quot;#a77c59&quot;\n    waifu: &quot;#ed6ea0&quot;\n  tagMember:\n    admin:\n      # - hash of admin@email.com\n    waifu:\n      # - hash of waifu@email.com\n</code></pre>\n<p>在文章Front Matter中也可以配置上述参数，访问该文章页面时，将覆盖全局配置。<br>尤其可以用来配置一个特殊的placeholder。</p>\n<pre><code class=\"yml\">valine:\n  placeholder: &quot;1. 提问前请先仔细阅读本文档⚡\\n2. 页面显示问题💥，请提供控制台截图📸或者您的测试网址\\n3. 其他任何报错💣，请提供详细描述和截图📸，祝食用愉快💪&quot;\n---\n</code></pre>\n<p>评论通知与管理工具建议使用这个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Rlc2VydHNQL1ZhbGluZS1BZG1pbg==\">Valine-Admin</span>。<br>注意<code>SITE_URL</code>需要以<code>/</code>结尾。</p>\n<p>如果某一篇文章需要关闭评论功能，则在文章Front Matter中配置：</p>\n<pre><code class=\"yml\">---\ntitle: 关闭评论\ncomment: false\n---\n</code></pre>\n<h1 id=\"背景音乐\"><a href=\"#背景音乐\" class=\"headerlink\" title=\"背景音乐\"></a>背景音乐</h1><p>在主题配置文件中，设置全局播放列表。<br>在文章的 Front Matter 中，设置文章专有播放列表，访问该文章页面时，将覆盖全局配置。</p>\n<pre><code class=\"yml\">audio:\n  - https://music.163.com/song?id=1387098940\n  - https://music.163.com/#/playlist?id=2088001742\n  - https://www.xiami.com/collect/250830668\n  - https://y.qq.com/n/yqq/playsquare/3535982902.html\n</code></pre>\n<p>如上，可以直接使用网易云、虾米、QQ音乐的播放列表、单曲，可以同时填写多个。</p>\n<pre><code class=\"yml\">audio:\n  - title: 列表1\n    list:\n      - https://music.163.com/#/playlist?id=2943811283\n      - https://music.163.com/#/playlist?id=2297706586\n  - title: 列表2\n    list:\n      - https://music.163.com/#/playlist?id=2031842656\n</code></pre>\n<p>如果需要自定义媒体文件，可以按照以下格式填写：</p>\n<pre><code class=\"yml\">audio:\n  - name: &quot;曲目1&quot;\n    url: &quot;播放地址&quot;\n    artist: &quot;艺术家&quot;\n    cover: &quot;封面&quot;\n    lrc: &quot;歌词&quot;\n  - name: &quot;曲目2&quot;\n    url: &quot;播放地址&quot;\n    artist: &quot;艺术家&quot;\n    cover: &quot;封面&quot;\n    lrc: &quot;歌词&quot;\n</code></pre>\n<pre><code class=\"yml\">audio:\n    - title: 列表1\n      list:\n        - name: &quot;曲目1&quot;\n          url: &quot;播放地址&quot;\n          artist: &quot;艺术家&quot;\n          cover: &quot;封面&quot;\n          lrc: &quot;歌词&quot;\n        - name: &quot;曲目2&quot;\n          url: &quot;播放地址&quot;\n          artist: &quot;艺术家&quot;\n          cover: &quot;封面&quot;\n          lrc: &quot;歌词&quot;\n    - title: 列表2\n      list:\n        - https://music.163.com/#/playlist?id=2031842656\n</code></pre>\n<p>如果要关闭当前页面的背景音乐播放器，则在文章Front Matter中配置：</p>\n<pre><code class=\"yml\">---\ntitle: 关闭背景音乐\naudio: false\n---\n</code></pre>\n<h1 id=\"随机图库\"><a href=\"#随机图库\" class=\"headerlink\" title=\"随机图库\"></a>随机图库</h1><ul>\n<li><p>默认的图片列表位于<code>&lt;root&gt;/themes/shoka/_images.yml</code>中。<br>使用了渣浪图库，使用一些上传工具，比如<span class=\"exturl\" data-url=\"aHR0cHM6Ly9waWMuZ2ltaG95LmNvbS8=\">这里</span><br>上传后图片的链接是<code>http://wx4.sinaimg.cn/large/6833939bly1gicmnywqgpj20zk0m8dwx.jpg</code>。<br>只需要新一行写上<code>- 6833939bly1gicmnywqgpj20zk0m8dwx.jpg</code>。</p>\n<p>如果想要自定义，则在<code>&lt;root&gt;/source/_data/</code>目录新建一个<code>images.yml</code>文件，这个文件中的图片至少6枚，将完全覆盖默认的图片列表。</p>\n</li>\n<li><p>也可以直接在图片列表yml文件中，写上任意外链图片地址<br>```yml</p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMTAvMzAvcUFNWUVGWHhKY0tSc2lHLmdpZg==\">https://i.loli.net/2020/10/30/qAMYEFXxJcKRsiG.gif</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMTAvMzAvcmpkaGNTZ0VOOENPQlBBLmpwZw==\">https://i.loli.net/2020/10/30/rjdhcSgEN8COBPA.jpg</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMTAvMzAvSEt5elNkN05JM21sQnB0LmpwZw==\">https://i.loli.net/2020/10/30/HKyzSd7NI3mlBpt.jpg</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMTAvMzAvWTFDQlhxZ2Vva0VzNDU3LmpwZw==\">https://i.loli.net/2020/10/30/Y1CBXqgeokEs457.jpg</span></p>\n</li>\n<li><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMTAvMzAvWjVXNnIyQlNvaVRoSEcxLmpwZw==\">https://i.loli.net/2020/10/30/Z5W6r2BSoiThHG1.jpg</span><br>```</p>\n</li>\n<li><p>也可以在主题配置文件中，设置图床API：</p>\n<pre><code class=\"yml\">image_server: &quot;https://acg.xydwz.cn/api/api.php&quot;\n</code></pre>\n</li>\n</ul>\n<h1 id=\"加载第三方组件\"><a href=\"#加载第三方组件\" class=\"headerlink\" title=\"加载第三方组件\"></a>加载第三方组件</h1><pre><code class=\"yml\">vendors:\n  css:\n    # 略略略\n  js:\n    # 略略略\n</code></pre>\n<p>包括</p>\n<p>–|–|–<br><code>pace</code> | 加载进度条|全局<br><code>pjax</code> | 页面无刷新加载|全局<br><code>anime</code> | js动画效果|全局<br><code>algolia</code> <code>instantsearch</code>| 基于algolia的站内搜索|全局<br><code>lazyload</code> | 图片懒加载|全局<br><code>quicklink</code> | 链接资源预加载|全局<br><code>fetch</code> | 获取播放列表|全局<br><code>katex</code> <code>copy_tex</code>|数学公式显示及复制|按需<br><code>fancybox</code> | 图片放大显示及排列|按需<br><code>valine</code> | 基于LeanCloud的评论系统及文章阅读次数统计|按需<br><code>chart</code> | 图表显示|按需</p>\n<p>以上文件加载全部基于jsDelivr，并对全局加载的组件进行了文件合并。<br>如果不明白啥意思，则不要轻易修改。</p>\n<p>:::danger<br>主题版本升级的时候，可能会修改这里。<br>如果修改过主题默认<code>_config.yml</code>，记得更新主题时，末尾的<code>vendors</code>也要及时修改。<br>:::</p>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo"
            ]
        },
        {
            "id": "http://jonayze.top/2020/08/13/computer-science/note/theme-shoka-doc/dependents/",
            "url": "http://jonayze.top/2020/08/13/computer-science/note/theme-shoka-doc/dependents/",
            "title": "Step.1 依赖插件",
            "date_published": "2020-08-13T12:46:48.000Z",
            "content_html": "<p>:::primary<br><a href=\"/computer-science/note/theme-shoka-doc/\">:rocket:快速开始</a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\"><strong>:love_letter:依赖插件</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">:pushpin:基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">:rainbow:界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">:unicorn:特殊功能</a><br>:::</p>\n<p>:::warning<br>请务必将hexo-renderer-multi-markdown-it升级到最新版，目前为 0.1.5<br>:::</p>\n<p>Theme Shoka依赖以下Hexo插件</p>\n<table>\n<thead>\n<tr>\n<th>插件名称</th>\n<th>npm地址</th>\n<th>功能</th>\n<th>依赖程度</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>hexo-renderer-multi-markdown-it</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">链接</span></td>\n<td>md文件渲染器，压缩css/js/html</td>\n<td>必需</td>\n</tr>\n<tr>\n<td>hexo-autoprefixer</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvcHJlZml4ZXI=\">链接</span></td>\n<td>给生成的css文件们添加浏览器前缀</td>\n<td>必需</td>\n</tr>\n<tr>\n<td>hexo-algoliasearch</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hbGdvbGlhc2VhcmNo\">链接</span></td>\n<td>站内搜索功能</td>\n<td>搜索按钮失灵</td>\n</tr>\n<tr>\n<td>hexo-symbols-count-time</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1zeW1ib2xzLWNvdW50LXRpbWU=\">链接</span></td>\n<td>文章或站点字数及阅读时间统计</td>\n<td>统计没有</td>\n</tr>\n<tr>\n<td>hexo-feed</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1mZWVk\">链接</span></td>\n<td>生成Feed文件</td>\n<td>Feed文件没有</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>没有正确安装以上插件的话，本主题会报错or无法正确显示or部分功能失效。<br><code>hexo-renderer-multi-markdown-it</code>请注意升级到最新版</p>\n</blockquote>\n<p>安装完以上插件后，修改站点配置文件，加入相关配置。</p>\n<h1 id=\"multi-markdown-it安装与配置\"><a href=\"#multi-markdown-it安装与配置\" class=\"headerlink\" title=\"multi-markdown-it安装与配置\"></a>multi-markdown-it安装与配置</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><ol>\n<li><p>安装前，记得务必卸载掉默认的<code>hexo-renderer-marked</code>，以及别的markdown文件渲染器。</p>\n<pre><code class=\"bash\">npm un hexo-renderer-marked --save\n# 或者\nyarn remove hexo-renderer-marked\n</code></pre>\n</li>\n<li><p>安装</p>\n<pre><code class=\"bash\">npm i hexo-renderer-multi-markdown-it --save\n# 或者\nyarn add hexo-renderer-multi-markdown-it\n</code></pre>\n</li>\n<li><p>如果安装缓慢，或者失败<br> 如报错</p>\n<pre><code class=\"bash\">ERROR: Failed to download Chromium r515411! Set &quot;PUPPETEER_SKIP_CHROMIUM_DOWNLOAD&quot; env variable to skip download.\n</code></pre>\n<p> 因为有一步需要下载puppeteer里的Chromium内核，基于天朝内部网络现状，这一步能不能成功要靠科学和运气，所以为了避免安装失败，需要加上<code>--ignore-scripts</code>跳过Chromium内核的下载。</p>\n<pre><code class=\"bash\">npm i hexo-renderer-multi-markdown-it --save --ignore-scripts\n# 或者\nyarn add hexo-renderer-multi-markdown-it --ignore-scripts\n</code></pre>\n<p> puppeteer主要是用来渲染mermaid流程图，只要文章中不使用mermaid就没有任何问题，如果要使用mermaid建议还是想办法完全安装。</p>\n</li>\n</ol>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><ol>\n<li><p>加入<code>markdown</code>配置，用来渲染md文件</p>\n<pre><code class=\"yml\">markdown:\nrender: # 渲染器设置\n html: false # 过滤 HTML 标签\n xhtmlOut: true # 使用 &#39;/&#39; 来闭合单标签 （比如 &lt;br /&gt;）。\n breaks: true # 转换段落里的 &#39;\\n&#39; 到 &lt;br&gt;。\n linkify: true # 将类似 URL 的文本自动转换为链接。\n typographer: \n quotes: &#39;“”‘’&#39;\nplugins: # markdown-it插件设置\n - plugin:\n     name: markdown-it-toc-and-anchor\n     enable: true\n     options: # 文章目录以及锚点应用的class名称，shoka主题必须设置成这样\n       tocClassName: &#39;toc&#39;\n       anchorClassName: &#39;anchor&#39;\n - plugin:\n     name: markdown-it-multimd-table\n     enable: true\n     options:\n       multiline: true\n       rowspan: true\n       headerless: true\n - plugin:\n     name: ./markdown-it-furigana\n     enable: true\n     options:\n       fallbackParens: &quot;()&quot;\n - plugin:\n     name: ./markdown-it-spoiler\n     enable: true\n     options:\n       title: &quot;你知道得太多了&quot;\n</code></pre>\n</li>\n<li><p>加入<code>minify</code>配置，压缩css/js/html</p>\n<pre><code class=\"yml\">minify:\nhtml:\n enable: true\n exclude: # 排除hexo-feed用到的模板文件\n   - &#39;**/json.ejs&#39;\n   - &#39;**/atom.ejs&#39;\n   - &#39;**/rss.ejs&#39;\ncss:\n enable: true\n exclude:\n   - &#39;**/*.min.css&#39;\njs:\n enable: true\n mangle:\n   toplevel: true\n output:\n compress:\n exclude:\n   - &#39;**/*.min.js&#39;\n</code></pre>\n</li>\n<li><p>停用默认代码高亮功能，否则代码块的mac样式不能正常显示。<br>找到<code>highlight</code>和<code>prismjs</code>，把<code>enable</code>改成<code>false</code>。</p>\n</li>\n</ol>\n<pre><code class=\"yml\">highlight:\n  enable: false\n\nprismjs:\n  enable: false\n</code></pre>\n<h1 id=\"autoprefixer配置建议\"><a href=\"#autoprefixer配置建议\" class=\"headerlink\" title=\"autoprefixer配置建议\"></a>autoprefixer配置建议</h1><pre><code class=\"yml\">autoprefixer:\n  exclude:\n    - &#39;*.min.css&#39;\n</code></pre>\n<p>缺少这个插件，首页卡片翻转效果在部分浏览器中无法正确显示。</p>\n<h1 id=\"algolia配置建议\"><a href=\"#algolia配置建议\" class=\"headerlink\" title=\"algolia配置建议\"></a>algolia配置建议</h1><pre><code class=\"yml\">algolia:\n  appId: #Your appId\n  apiKey: #Your apiKey\n  adminApiKey: #Your adminApiKey\n  chunkSize: 5000\n  indexName: #&quot;shoka&quot;\n  fields:\n    - title #必须配置\n    - path #必须配置\n    - categories #推荐配置\n    - content:strip:truncate,0,2000\n    - gallery\n    - photos\n    - tags\n</code></pre>\n<h1 id=\"feed配置建议\"><a href=\"#feed配置建议\" class=\"headerlink\" title=\"feed配置建议\"></a>feed配置建议</h1><pre><code class=\"yml\">keywords: #站点关键词，用“,”分隔\n\nfeed:\n    limit: 20\n    order_by: &quot;-date&quot;\n    tag_dir: false\n    category_dir: false\n    rss:\n        enable: true\n        template: &quot;themes/shoka/layout/_alternate/rss.ejs&quot;\n        output: &quot;rss.xml&quot;\n    atom:\n        enable: true\n        template: &quot;themes/shoka/layout/_alternate/atom.ejs&quot;\n        output: &quot;atom.xml&quot;\n    jsonFeed:\n        enable: true\n        template: &quot;themes/shoka/layout/_alternate/json.ejs&quot;\n        output: &quot;feed.json&quot;\n</code></pre>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo"
            ]
        },
        {
            "id": "http://jonayze.top/2020/08/13/computer-science/note/theme-shoka-doc/theme-shoka-doc/",
            "url": "http://jonayze.top/2020/08/13/computer-science/note/theme-shoka-doc/theme-shoka-doc/",
            "title": "转载：Hexo主题Shoka & multi-markdown-it渲染器使用说明",
            "date_published": "2020-08-13T12:45:48.000Z",
            "content_html": "<h1 id=\"转载文章来自原作者-Shoka，喜欢本主题的可以来看看。\"><a href=\"#转载文章来自原作者-Shoka，喜欢本主题的可以来看看。\" class=\"headerlink\" title=\"转载文章来自原作者-Shoka，喜欢本主题的可以来看看。\"></a>转载文章来自原作者-Shoka，喜欢本主题的可以来看看。</h1><h2 id=\"要是有些配置不会弄，原作者正好在忙的话，你可以在文章下方问问我，也许我能帮上忙。\"><a href=\"#要是有些配置不会弄，原作者正好在忙的话，你可以在文章下方问问我，也许我能帮上忙。\" class=\"headerlink\" title=\"要是有些配置不会弄，原作者正好在忙的话，你可以在文章下方问问我，也许我能帮上忙。\"></a>要是有些配置不会弄，原作者正好在忙的话，你可以在文章下方问问我，也许我能帮上忙。</h2><p>:::info<br>跳票N久终于更新的简单的使用说明</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==\">hexo-theme-shoka</span> ：本博客自用的主题</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-markdown-it</span>：配套的markdown渲染器</li>\n</ul>\n<p>已经支持hexo 5。。。本文档和bug不定期更新中。<br>如果有什么功能需求，欢迎留言。<br>:::</p>\n<p>:::warning<br>当前版本更新至 0.2.5，<a href=\"#%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95\">更新记录点此</a><br>:::</p>\n<p>:::primary<br><a href=\"/computer-science/note/theme-shoka-doc/\"><strong>:rocket:快速开始</strong></a> - <a href=\"/computer-science/note/theme-shoka-doc/dependents/\">:love_letter:依赖插件</a> - <a href=\"/computer-science/note/theme-shoka-doc/config/\">:pushpin:基本配置</a> - <a href=\"/computer-science/note/theme-shoka-doc/display/\">:rainbow:界面显示</a> - <a href=\"/computer-science/note/theme-shoka-doc/special/\">:unicorn:特殊功能</a><br>:::</p>\n<h1 id=\"设计缘由\"><a href=\"#设计缘由\" class=\"headerlink\" title=\"设计缘由\"></a>设计缘由</h1><p>前几年在Bear和Evernote上整理了大量笔记，非常喜欢Bear默认的markdown渲染样式。<br>后来因为换了安卓手机，用不了Bear，四处搜寻替代品，没有满意的。<br>然后阴差阳错知道了Hexo，又得知Github也可以免费建私有仓库了，故再次转移阵地到了自建博客，并部署在Github Pages。</p>\n<p>因为这个博客是用来记笔记的，故起名<code>书架</code>。<br>对应的主题即<code>Theme.Shoka</code>，可以说是为了笔记阅读而生的主题。<br>样式严重参考Bear，部分代码严重参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZW1lLW5leHQv\">NexT</span>。</p>\n<p>Hexo的默认及常用渲染器均使用<code>highlight.js</code>进行代码高亮，而我喜欢<code>Prism.js</code>，故重写了一个渲染器配合主题食用。<br>渲染器取名<code>multi</code>，因为集成了很多很多很多<code>markdown-it</code>插件，以及压缩静态文件的功能。<br>（最新版的默认渲染器也支持<code>Prism.js</code>了，可喜可贺，但不想用，哈哈哈哈哈哈哈</p>\n<p>墙内Github Pages访问速度时而感人，所以用了<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qc2RlbGl2ci5jb20v\">jsDelivr</span>加速，主要是因为它可以按需合并依赖文件。</p>\n<h1 id=\"快速安装\"><a href=\"#快速安装\" class=\"headerlink\" title=\"快速安装\"></a>快速安装</h1><pre><code class=\"bash\"># cd your-blog\ngit clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka\n</code></pre>\n<p>打开主题目录，内有<code>example</code>文件夹，提供了配置文件的demo供参考。</p>\n<h1 id=\"安装依赖插件\"><a href=\"#安装依赖插件\" class=\"headerlink\" title=\"安装依赖插件\"></a>安装依赖插件</h1><p>在应用主题之前，必须至少安装 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by1yZW5kZXJlci1tdWx0aS1tYXJrZG93bi1pdA==\">hexo-renderer-multi-markdown-it</span> 渲染插件 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvcHJlZml4ZXI=\">hexo-autoprefixer</span>。</p>\n<p><a href=\"dependents/\">插件安装与配置教程戳此</a></p>\n<h1 id=\"应用主题\"><a href=\"#应用主题\" class=\"headerlink\" title=\"应用主题\"></a>应用主题</h1><h2 id=\"修改站点配置\"><a href=\"#修改站点配置\" class=\"headerlink\" title=\"修改站点配置\"></a>修改站点配置</h2><p>修改站点配置文件<code>&lt;root&gt;/_config.yml</code>，把主题改为 <code>shoka</code></p>\n<pre><code class=\"yml\">theme: shoka\n</code></pre>\n<h2 id=\"修改主题配置\"><a href=\"#修改主题配置\" class=\"headerlink\" title=\"修改主题配置\"></a>修改主题配置</h2><p>主题配置的所有参数在<code>&lt;root&gt;/themes/shoka/_config.yml</code>文件中。</p>\n<p>为了方便主题升级，请在根目录新建一个yml文件，命名为<code>_config.shoka.yml</code>。<br>也就是说，所有主题的自定义配置均保存于<code>&lt;root&gt;/_config.shoka.yml</code>文件。</p>\n<p><a href=\"config/\">主题的基础配置可以参考这里</a><br><a href=\"display/\">界面显示相关的配置参考这里</a></p>\n<h1 id=\"更新记录\"><a href=\"#更新记录\" class=\"headerlink\" title=\"更新记录\"></a>更新记录</h1><p>标签含义：<br>❗ 需要手动操作的更新信息<br>⚠️ 需要注意的更新信息<br>🔧 已修复的问题<br>⌛ TODO</p>\n<h2 id=\"0-2-4-👉-0-2-5\"><a href=\"#0-2-4-👉-0-2-5\" class=\"headerlink\" title=\"0.2.4 👉 0.2.5\"></a>0.2.4 👉 0.2.5</h2><p>💡  避免直接修改主题文件，添加各种自定义：</p>\n<ul>\n<li><a href=\"display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E9%85%8D%E8%89%B2\">样式</a>：包括配色、<a href=\"config/#iconfont%E5%9B%BE%E6%A0%87\">icon</a>、其他自定义样式</li>\n<li>图片：包括<a href=\"display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E5%9B%BE%E7%89%87\">主题图片</a>、<a href=\"config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93\">随机图库</a></li>\n</ul>\n<p>🔧 修复一些BUG</p>\n<h2 id=\"0-2-3-👉-0-2-4\"><a href=\"#0-2-3-👉-0-2-4\" class=\"headerlink\" title=\"0.2.3 👉 0.2.4\"></a>0.2.3 👉 0.2.4</h2><p>⚠️ <strong>评论功能更新</strong></p>\n<ul>\n<li>MiniValine魔改版更新至beta10，修改过主题默认<code>_config.yml</code>的同学，记得更新末尾的<code>vendors</code>到最新哦</li>\n<li>❗ 评论相关的配置有更新，<a href=\"config/#%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA\">配置戳此</a><ul>\n<li>主要增加的Tag配置，现在可以各种自定义啦</li>\n</ul>\n</li>\n</ul>\n<p>⚠️ 配置新增</p>\n<ul>\n<li>夜间模式<code>darkmode</code>，<a href=\"config/#%E5%A4%9C%E9%97%B4%E6%A8%A1%E5%BC%8F\">配置戳此</a></li>\n<li>自动定位<code>auto_scroll</code>，<a href=\"config/#%E8%87%AA%E5%8A%A8%E5%AE%9A%E4%BD%8D\">配置戳此</a></li>\n<li>图床API设置<code>image_server</code>，<a href=\"config/#%E9%9A%8F%E6%9C%BA%E5%9B%BE%E5%BA%93\">配置戳此</a></li>\n</ul>\n<p>⚠️ 背景音乐功能增强，<a href=\"config/#%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90\">配置戳此</a></p>\n<ul>\n<li>可以添加多个播放列表</li>\n<li>加了一些控制按钮</li>\n</ul>\n<p>⚠️ 增加<code>media</code>标签，在文章中插入音频和视频播放列表，<a href=\"special/#media%E5%A4%9A%E5%AA%92%E4%BD%93\">方法戳此</a><br>⌛  视频播放器有待增强（显示分段标签，字幕）</p>\n<p>🔧 随机图库支持非渣浪图床的任意图片<br>🔧 还有许多小BUG</p>\n<h2 id=\"0-2-2-👉-0-2-3\"><a href=\"#0-2-2-👉-0-2-3\" class=\"headerlink\" title=\"0.2.2 👉 0.2.3\"></a>0.2.2 👉 0.2.3</h2><p>❗ 增加主题文件外自定义语言包的功能，<a href=\"display/#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80%E5%8C%85\">配置戳此</a><br>🔧 提高低版本浏览器兼容性</p>\n<h2 id=\"0-2-1-👉-0-2-2\"><a href=\"#0-2-1-👉-0-2-2\" class=\"headerlink\" title=\"0.2.1 👉 0.2.2\"></a>0.2.1 👉 0.2.2</h2><p>⚠️ 弃用<code>mediumzoom</code>，改成<code>fancybox</code>，<a href=\"display/#%E5%9B%BE%E7%89%87%E5%B1%95%E7%A4%BA%E4%B8%8E%E7%9B%B8%E5%86%8C\">配置戳此</a><br>💡  增加语言包：<code>繁体中文</code>和<code>日语</code><br>💡  quiz功能优化，根据语言显示题型标签<br>🔧 修复评论功能中反复初始化leancloud-storage<br>🔧 修复<code>audio: false</code>时不能隐藏播放按钮、停止播放</p>\n<h2 id=\"0-2-👉-0-2-1\"><a href=\"#0-2-👉-0-2-1\" class=\"headerlink\" title=\"0.2 👉 0.2.1\"></a>0.2 👉 0.2.1</h2><p>⚠️ 配置文件添加 <code>loader</code> 参数，<a href=\"config/#%E5%8A%A0%E8%BD%BD%E5%8A%A8%E7%94%BB\">配置戳此</a><br>💡  二级list区别显示<br>🔧 修复浏览位置定位BUG<br>🔧 修复firework动画延迟<br>🔧 优化评论功能</p>\n<h2 id=\"0-1-9-👉-0-2\"><a href=\"#0-1-9-👉-0-2\" class=\"headerlink\" title=\"0.1.9 👉 0.2\"></a>0.1.9 👉 0.2</h2><p>⚠️  <strong>评论功能大改</strong></p>\n<ul>\n<li>弃用不开源的Valine，改用MiniValine，并且进行了魔改，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvTWluaVZhbGluZQ==\">项目戳此</span><br>  主要是大量压缩了代码，弃用一些花里胡哨的功能，又加了一些别的花里胡哨的功能。</li>\n<li>为防止泄露用户邮箱、IP等隐私信息，弃用QQ号获取昵称及头像。<br>  ❗ 同时需要手动进行一些迁移，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ltYWVnb28vVmFsaW5l\">具体步骤戳此</span></li>\n<li>❗ 评论相关的配置亦有更新，<a href=\"config/#%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA\">配置戳此</a></li>\n</ul>\n<p>⚠️ 增加单击页面烟花效果，<a href=\"config/#%E9%A1%B5%E9%9D%A2%E7%89%B9%E6%95%88\">配置戳此</a><br>💡  弃用Velocity，改用anime.js，方便未来添加更多!!花里胡哨的!!功能!!严重拖慢页面滑行速度!!<br>🔧 新增多枚icon，包括豆瓣<code>i-douban</code>等<br>🔧 一些显示问题</p>\n",
            "tags": [
                "计算机科学",
                "二进制杂谈",
                "Theme Shoka Documentation",
                "Hexo"
            ]
        },
        {
            "id": "http://jonayze.top/2019/12/18/computer-science/web/course-1/1_Html%E5%92%8CCss/",
            "url": "http://jonayze.top/2019/12/18/computer-science/web/course-1/1_Html%E5%92%8CCss/",
            "title": "1：前端HTML学习复习简化路径",
            "date_published": "2019-12-18T06:56:14.000Z",
            "content_html": "<h2 id=\"暂时不美化，因为美化会花相当长的时间…\"><a href=\"#暂时不美化，因为美化会花相当长的时间…\" class=\"headerlink\" title=\"暂时不美化，因为美化会花相当长的时间…..\"></a>暂时不美化，因为美化会花相当长的时间…..</h2><p>HTML</p>\n<p>HTML常用标签<br>div、label、span、b、p、ul、ol、li、dl、dt、dd、h1、h2、h3、input、i、em</p>\n<hr>\n<p>CSS</p>\n<p>第一步：<br>CSS语法<br> .  操作符，使用 class 引用</p>\n<h1 id=\"操作符，使用-id-引用\"><a href=\"#操作符，使用-id-引用\" class=\"headerlink\" title=\"操作符，使用 id 引用\"></a>操作符，使用 id 引用</h1><p>第二步<br>基本概念</p>\n<ol>\n<li><p>层叠式是什么意思？<br>意思就是再html上披上了华丽的外衣，也就是美化网页</p>\n</li>\n<li><p>CSS 盒模型<br>margin（外边距）  清楚边框外的区域，外边距是透明的<br>border（边框）      围绕在padding（内边距）外和content（内容）外的边框<br>padding（内边距）清楚内容周围的区域，内边距是透明的<br>content（内容）盒子的内容，显示文字和图像</p>\n</li>\n</ol>\n<p>—–border 边框属性<br>边框宽度设置：<br>border-width: 5px ;</p>\n<p>border-style 值:<br>none: 默认无边框<br>dotted: 定义一个点线边框<br>dashed: 定义一个虚线边框<br>solid: 定义实线边框<br>double: 定义两个边框。 两个边框的宽度和 border-width 的值相同<br>groove: 定义3D沟槽边框。效果取决于边框的颜色值<br>ridge: 定义3D脊边框。效果取决于边框的颜色值<br>inset:定义一个3D的嵌入边框。效果取决于边框的颜色值<br>outset: 定义一个3D突出边框。 效果取决于边框的颜色值<br>圆角边框：border-radius: 20px ;</p>\n<p>边框颜色：<br>border-color: red ;</p>\n<p>边框-单独设置各边——(指定不同侧面不同边框)style（样式）也可以换成color（边框颜色）和width（边框宽度）<br>border-top-style: dotted ;            上<br>border-right-style: solid ;              右<br>border-bottom-style: dotted ;       下<br>border-left-style: solid ;                左</p>\n<p>—–轮廓（outline）属性  **和边框（border）类似<br>说明—&gt;<br>轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。<br>轮廓（outline）属性指定元素轮廓的样式、颜色和宽度。</p>\n<p>轮廓宽度设置：<br>outline-width: 2px ;</p>\n<p>轮廓样式（style）值：<br>outline-style 值 :<br>none: 默认无边框<br>dotted: 定义一个点线边框<br>dashed: 定义一个虚线边框<br>solid: 定义实线边框<br>double: 定义两个边框。 两个边框的宽度和 border-width 的值相同<br>groove: 定义3D沟槽边框。效果取决于边框的颜色值<br>ridge: 定义3D脊边框。效果取决于边框的颜色值<br>inset:定义一个3D的嵌入边框。效果取决于边框的颜色值<br>outset: 定义一个3D突出边框。 效果取决于边框的颜色值<br>inherit</p>\n<p>轮廓的颜色：<br>outline-color : blue</p>\n<p>—–margin（外边距）<br>说明—&gt;<br>margin 清除周围的（外边框）元素区域。margin 没有背景颜色，是完全透明的。<br>margin 可以单独改变元素的上，下，左，右边距，也可以一次改变所有的属性。</p>\n<p>margin - 单边外边距属性<br>margin-top: 100px ;              设置上边距的属性<br>margin-right : 20px ;             设置右边距的属性<br>margin-bottom : 90px ;         设置下边距的属性<br>margin-left : 50px ;                设置左边距的属性</p>\n<p>margin - 简写属性<br>说明—&gt;<br>为了缩短代码，有可能使用一个属性中margin指定的所有边距属性。这就是所谓的简写属性。<br>所有边距属性的简写属性是 margin :<br>margin属性可以有一到四个值。</p>\n<p>下方为从左至右顺序排序–：</p>\n<p>四个值时：<br>margin : 25px 8px 56px 87px ;<br>上边距为 25px<br>右边距为 8px<br>下边距为 56px<br>左边距为 87px</p>\n<p>三个值时：<br>margin : 67px 43px 90px ;<br>上边距为 67px<br>左右边距为 43px<br>下边距为 90px</p>\n<p>两个值时：<br>margin : 90px 67px ;<br>上下边距为90px<br>左右边距为 67px</p>\n<p>一个值时：<br>margin : 100px ;<br>上下左右边距（四边）都为 100px </p>\n<p>—–padding（内边距）填充——&gt;&gt;类似与margin（外边距）的操作差不多<br>说明：<br>当元素的 padding（填充）内边距被清除时，^<em>所释放的区域将会受到元素背景颜色的填充</em>^。<br>单独使用 padding 属性可以改变上下左右的填充。</p>\n<p>padding - 单边外边距属性<br>padding-top: 100px ;              设置上边距的属性<br>padding-right : 20px ;             设置右边距的属性<br>padding-bottom : 90px ;         设置下边距的属性<br>padding-left : 50px ;                设置左边距的属性</p>\n<p>padding - 简写属性<br>说明—&gt;<br>为了缩短代码，有可能使用一个属性中padding指定的所有边距属性。这就是所谓的简写属性。<br>所有边距属性的简写属性是 padding :<br>padding属性可以有一到四个值。</p>\n<p>下方为从左至右顺序排序–：</p>\n<p>四个值时：<br>padding : 25px 8px 56px 87px ;<br>上边距为 25px<br>右边距为 8px<br>下边距为 56px<br>左边距为 87px</p>\n<p>三个值时：<br>padding : 67px 43px 90px ;<br>上边距为 67px<br>左右边距为 43px<br>下边距为 90px</p>\n<p>两个值时：<br>padding : 90px 67px ;<br>上下边距为90px<br>左右边距为 67px</p>\n<p>一个值时：<br>padding : 100px ;<br>上下左右边距（四边）都为 100px </p>\n<ol start=\"3\">\n<li>CSS定位<br>在默认情况下，相对定位是相对于元素本身所在的位置去定位；绝对定位是相对于左上角坐标原点去定位。</li>\n</ol>\n<p>position 属性指定了元素的定位类型。<br>position 属性的五个值：<br>static<br>relative<br>fixed<br>absolute<br>sticky<br>元素可以使用的顶部，底部，左侧和右侧属性定位。然而，这些属性无法工作，除非是先设定position属性。他们也有不同的工作方式，这取决于定位方法。</p>\n<p>（一）. –static 定位（静态定位，还是跟随着正常的文本流）<br>HTML 元素的默认值，即没有定位，遵循正常的文档流对象。<br>静态定位的元素不会受到 top, bottom, left, right影响。</p>\n<p>（二）. –fixed 定位（固定定位）<br>元素的位置相对于浏览器窗口是固定位置。<br>即使窗口是滚动的它也不会移动：</p>\n<head>\n<meta charset=\"utf-8\"> \n<title>菜鸟教程(runoob.com)</title> \n<style>\np.pos_fixed\n{\n    position:fixed;\n    top:30px;\n    right:5px;\n}\n</style>\n</head>\n<body>\n\n<p class=\"pos_fixed\">Some more text</p>\n<p><b>注意:</b> IE7 和 IE8 支持只有一个 !DOCTYPE 指定固定值.</p>\n<p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p><p>Some text</p>\n</body>\n\n<p>（三）. –relative 定位（相对定位，在原有基础的位置上没有脱离文档流）<br>相对定位元素的定位是相对其正常位置。</p>\n<p>（四）. –absolute 定位（绝对定位，在原有的基础上脱离了文档流）<br>绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于<html>:</p>\n<p>（五）. –sticky 定位（粘性定位，滚动到一定位置的时候会变为固定定位）<br>position: sticky; 基于用户的滚动位置来定位。<br>粘性定位的元素是依赖于用户的滚动，在 position:relative 与 position:fixed 定位之间切换。</p>\n<p>重要：<br>重叠的元素<br>元素的定位与文档流无关，所以它们可以覆盖页面上的其它元素<br>z-index属性指定了一个元素的堆叠顺序（哪个元素应该放在前面，或后面）<br>一个元素可以有正数或负数的堆叠顺序：</p>\n<style>\nimg\n{\n      position:absolute;\n      left:0px;\n      top:0px;\n      z-index:-1;\n}\n</style>\n<body>\n<h1>This is a heading</h1>\n<img data-src=\"w3css.gif\" width=\"100\" height=\"140\" />\n<p>因为图像元素设置了 z-index 属性值为 -1, 所以它会显示在文字之后。</p>\n</body>\n\n\n\n\n\n<ol start=\"4\">\n<li>css的优先级</li>\n</ol>\n<p>css优先级规则（1）<br>接近最中间的祖先样式比其它祖先样式优先级高<br>示例代码：</p>\n<!-- 类名为 son 的 div 的 color 为 blue -->\n<div style=\"color: red\">\n    <div style=\"color: blue\">\n        <div class=\"son\"></div>\n    </div>\n</div>\n\n<p>css优先级规则（2）<br>直接样式（最中间样式）比祖先样式优先级高<br>示例代码：</p>\n<!-- 类名为 son 的 div 的 color 为 blue -->\n<div style=\"color: red\">\n    <div class=\"son\" style=\"color: blue\"></div>\n</div>\n\n<p>css优先级规则（3）<br>优先级的关系：内联样式（4）&gt;ID选择器（3）&gt;类选择器（2）=属性选择器（2）=伪类选择器（2）&gt;标签选择器（1）=伪元素选择器（1）</p>\n<p>css优先选择器（4）<br>参照css优先级规则（3）—– 按各个选择器的之和（后面标的数值用来相加）决定它们的优先级，和越大优先级越高，相反，和越小优先级越小<br>示例代码：<br>// HTML</p>\n<div id=\"con-id\">\n    <span class=\"con-span\"></span>\n</div>\n\n<p>// CSS<br>#con-id span {<br>    color: red;<br>}<br>div .con-span {<br>    color: blue;<br>}</p>\n<p>最后span的值为red</p>\n<p>css优先选择器（5）<br>属性后插有 !important 的属性拥有最高优先级，若同时插有 !important，则利用规则3、4判断优先级</p>\n<p>css创建（定义）变量：<br>–kingkui-fe：red；<br>两个横杠后面是变量名，冒号后面则赋值。<br>引用变量：<br>background：var（–kingkui-fe，black）<br>注意，引用变量过后后面跟着一个black，那是防止浏览器不兼容而写的，意思就是<br>当浏览器不支持变量时，背景颜色会变成黑色。其中也会很好维护。</p>\n<p>在 :root 里定义变量 ，整个网页都能生效，但通常只定义变量在里面。<br>示例：</p>\n<pre><code>:root&#123;\n    --kingdw-dw: red;\n&#125;\n</code></pre>\n",
            "tags": [
                "计算机科学",
                "前端设计",
                "HTML和CSS",
                "前端基础教程"
            ]
        }
    ]
}